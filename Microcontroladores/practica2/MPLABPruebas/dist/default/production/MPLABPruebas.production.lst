

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Dec 03 13:27:11 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0001                     _TMR0	set	1
   378  001E                     _ADRESH	set	30
   379  001F                     _ADCON0	set	31
   380  0008                     _PORTD	set	8
   381  0006                     _PORTB	set	6
   382  0005                     _PORTA	set	5
   383  00F9                     _GO	set	249
   384  00F8                     _ADON	set	248
   385  00FA                     _CHS0	set	250
   386  00FB                     _CHS1	set	251
   387  00FC                     _CHS2	set	252
   388  0066                     _ADIF	set	102
   389  0032                     _RB2	set	50
   390  0031                     _RB1	set	49
   391  0030                     _RB0	set	48
   392  0040                     _RD0	set	64
   393  0041                     _RD1	set	65
   394  0042                     _RD2	set	66
   395  0047                     _RD7	set	71
   396  0046                     _RD6	set	70
   397  0045                     _RD5	set	69
   398  0044                     _RD4	set	68
   399  0081                     _OPTION_REG	set	129
   400  009E                     _ADRESL	set	158
   401  009F                     _ADCON1	set	159
   402  008F                     _OSCCON	set	143
   403  0088                     _TRISD	set	136
   404  0086                     _TRISB	set	134
   405  0085                     _TRISA	set	133
   406                           
   407                           	psect	strings
   408  0003                     __pstrings:
   409  0003                     stringtab:
   410  0003                     __stringtab:
   411  0003                     stringcode:	
   412                           ;	String table - string pointers are 1 byte each
   413                           
   414  0003                     stringdir:
   415  0003  3000               	movlw	high stringdir
   416  0004  008A               	movwf	10
   417  0005  0804               	movf	4,w
   418  0006  0A84               	incf	4,f
   419  0007  0782               	addwf	2,f
   420  0008                     __stringbase:
   421  0008  3400               	retlw	0
   422  0009                     __end_of__stringtab:
   423  0009                     STR_3:
   424  0009  3431               	retlw	49	;'1'
   425  000A  343A               	retlw	58	;':'
   426  000B  3444               	retlw	68	;'D'
   427  000C  3443               	retlw	67	;'C'
   428  000D  3420               	retlw	32	;' '
   429  000E  3432               	retlw	50	;'2'
   430  000F  343A               	retlw	58	;':'
   431  0010  3441               	retlw	65	;'A'
   432  0011  3443               	retlw	67	;'C'
   433  0012  3420               	retlw	32	;' '
   434  0013  3433               	retlw	51	;'3'
   435  0014  343A               	retlw	58	;':'
   436  0015  3454               	retlw	84	;'T'
   437  0016  3465               	retlw	101	;'e'
   438  0017  346D               	retlw	109	;'m'
   439  0018  3470               	retlw	112	;'p'
   440  0019  3400               	retlw	0
   441  001A                     STR_4:
   442  001A  344F               	retlw	79	;'O'
   443  001B  3470               	retlw	112	;'p'
   444  001C  3463               	retlw	99	;'c'
   445  001D  3469               	retlw	105	;'i'
   446  001E  346F               	retlw	111	;'o'
   447  001F  346E               	retlw	110	;'n'
   448  0020  3420               	retlw	32	;' '
   449  0021  3445               	retlw	69	;'E'
   450  0022  346C               	retlw	108	;'l'
   451  0023  3465               	retlw	101	;'e'
   452  0024  3467               	retlw	103	;'g'
   453  0025  3469               	retlw	105	;'i'
   454  0026  3464               	retlw	100	;'d'
   455  0027  3461               	retlw	97	;'a'
   456  0028  343A               	retlw	58	;':'
   457  0029  3400               	retlw	0
   458  002A                     STR_10:
   459  002A  3445               	retlw	69	;'E'
   460  002B  3472               	retlw	114	;'r'
   461  002C  3472               	retlw	114	;'r'
   462  002D  346F               	retlw	111	;'o'
   463  002E  3472               	retlw	114	;'r'
   464  002F  3420               	retlw	32	;' '
   465  0030  3453               	retlw	83	;'S'
   466  0031  3465               	retlw	101	;'e'
   467  0032  346C               	retlw	108	;'l'
   468  0033  3465               	retlw	101	;'e'
   469  0034  3463               	retlw	99	;'c'
   470  0035  3463               	retlw	99	;'c'
   471  0036  3469               	retlw	105	;'i'
   472  0037  346F               	retlw	111	;'o'
   473  0038  346E               	retlw	110	;'n'
   474  0039  3400               	retlw	0
   475  003A                     STR_7:
   476  003A  344D               	retlw	77	;'M'
   477  003B  3475               	retlw	117	;'u'
   478  003C  346C               	retlw	108	;'l'
   479  003D  3474               	retlw	116	;'t'
   480  003E  3469               	retlw	105	;'i'
   481  003F  346D               	retlw	109	;'m'
   482  0040  3465               	retlw	101	;'e'
   483  0041  3474               	retlw	116	;'t'
   484  0042  3472               	retlw	114	;'r'
   485  0043  346F               	retlw	111	;'o'
   486  0044  3420               	retlw	32	;' '
   487  0045  3441               	retlw	65	;'A'
   488  0046  3443               	retlw	67	;'C'
   489  0047  343A               	retlw	58	;':'
   490  0048  3400               	retlw	0
   491  0049                     STR_5:
   492  0049  344D               	retlw	77	;'M'
   493  004A  3475               	retlw	117	;'u'
   494  004B  346C               	retlw	108	;'l'
   495  004C  3474               	retlw	116	;'t'
   496  004D  3469               	retlw	105	;'i'
   497  004E  346D               	retlw	109	;'m'
   498  004F  3465               	retlw	101	;'e'
   499  0050  3474               	retlw	116	;'t'
   500  0051  3472               	retlw	114	;'r'
   501  0052  346F               	retlw	111	;'o'
   502  0053  3420               	retlw	32	;' '
   503  0054  3444               	retlw	68	;'D'
   504  0055  3443               	retlw	67	;'C'
   505  0056  343A               	retlw	58	;':'
   506  0057  3400               	retlw	0
   507  0058                     STR_2:
   508  0058  3445               	retlw	69	;'E'
   509  0059  346C               	retlw	108	;'l'
   510  005A  3465               	retlw	101	;'e'
   511  005B  3467               	retlw	103	;'g'
   512  005C  3469               	retlw	105	;'i'
   513  005D  3472               	retlw	114	;'r'
   514  005E  3420               	retlw	32	;' '
   515  005F  346F               	retlw	111	;'o'
   516  0060  3470               	retlw	112	;'p'
   517  0061  3463               	retlw	99	;'c'
   518  0062  3469               	retlw	105	;'i'
   519  0063  346F               	retlw	111	;'o'
   520  0064  346E               	retlw	110	;'n'
   521  0065  343A               	retlw	58	;':'
   522  0066  3400               	retlw	0
   523  0067                     STR_1:
   524  0067  3450               	retlw	80	;'P'
   525  0068  3452               	retlw	82	;'R'
   526  0069  3441               	retlw	65	;'A'
   527  006A  3443               	retlw	67	;'C'
   528  006B  3454               	retlw	84	;'T'
   529  006C  3449               	retlw	73	;'I'
   530  006D  3443               	retlw	67	;'C'
   531  006E  3441               	retlw	65	;'A'
   532  006F  3420               	retlw	32	;' '
   533  0070  3432               	retlw	50	;'2'
   534  0071  3400               	retlw	0
   535  0072                     STR_11:
   536  0072  3456               	retlw	86	;'V'
   537  0073  3461               	retlw	97	;'a'
   538  0074  346C               	retlw	108	;'l'
   539  0075  346F               	retlw	111	;'o'
   540  0076  3472               	retlw	114	;'r'
   541  0077  343A               	retlw	58	;':'
   542  0078  3420               	retlw	32	;' '
   543  0079  3400               	retlw	0
   544  003A                     
   545                           	psect	cinit
   546  07F8                     start_initialization:	
   547                           ; #config settings
   548                           
   549  07F8                     __initialization:
   550                           
   551                           ; Clear objects allocated to BANK0
   552  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   553  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   554  07FA  01AD               	clrf	__pbssBANK0& (0+127)
   555  07FB  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   556  07FC                     end_of_initialization:	
   557                           ;End of C runtime variable initialization code
   558                           
   559  07FC                     __end_of__initialization:
   560  07FC  0183               	clrf	3
   561  07FD  120A  118A  2F08   	ljmp	_main	;jump to C main() function
   562                           
   563                           	psect	bssBANK0
   564  002D                     __pbssBANK0:
   565  002D                     _ADRES:
   566  002D                     	ds	2
   567                           
   568                           	psect	cstackCOMMON
   569  0070                     __pcstackCOMMON:
   570  0070                     ?_iniciarPullUp:
   571  0070                     ??_iniciarPullUp:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_ADCInit:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ??_ADCInit:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_delay_ms:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_printMenu:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_seleccionarMultimetroDC:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_medirVoltajeDC:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_seleccionarMultimetroAC:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_seleccionarTemperatura:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_mostrarError:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Lcd_Port:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ??_Lcd_Port:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Lcd_Cmd:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_Lcd_Clear:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_Lcd_Init:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_Lcd_Write_Char:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_Lcd_Write_String:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_main:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     Lcd_Port@a:	
   626                           ; 2 bytes @ 0x0
   627                           
   628  0070                     ADCRead@channel:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     delay_ms@time:	
   632                           ; 1 bytes @ 0x0
   633                           
   634                           
   635                           ; 2 bytes @ 0x0
   636  0070                     	ds	1
   637  0071                     ??_Lcd_Cmd:
   638  0071                     ??_Lcd_Write_Char:	
   639                           ; 1 bytes @ 0x1
   640                           
   641                           
   642                           ; 1 bytes @ 0x1
   643  0071                     	ds	1
   644  0072                     ??_delay_ms:
   645  0072                     Lcd_Write_Char@temp:	
   646                           ; 1 bytes @ 0x2
   647                           
   648                           
   649                           ; 1 bytes @ 0x2
   650  0072                     	ds	1
   651  0073                     Lcd_Cmd@a:
   652  0073                     Lcd_Write_Char@y:	
   653                           ; 1 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657  0073                     	ds	1
   658  0074                     ??_Lcd_Clear:
   659  0074                     ?_Lcd_Set_Cursor:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ??_Lcd_Init:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     Lcd_Set_Cursor@b:	
   666                           ; 1 bytes @ 0x4
   667                           
   668  0074                     Lcd_Write_Char@a:	
   669                           ; 1 bytes @ 0x4
   670                           
   671                           
   672                           ; 1 bytes @ 0x4
   673  0074                     	ds	1
   674  0075                     ??_Lcd_Set_Cursor:
   675  0075                     ??_Lcd_Write_String:	
   676                           ; 1 bytes @ 0x5
   677                           
   678  0075                     Lcd_Write_String@i:	
   679                           ; 1 bytes @ 0x5
   680                           
   681                           
   682                           ; 2 bytes @ 0x5
   683  0075                     	ds	1
   684  0076                     delay_ms@i:
   685                           
   686                           ; 4 bytes @ 0x6
   687  0076                     	ds	1
   688  0077                     Lcd_Set_Cursor@a:
   689  0077                     Lcd_Write_String@a:	
   690                           ; 1 bytes @ 0x7
   691                           
   692                           
   693                           ; 1 bytes @ 0x7
   694  0077                     	ds	1
   695  0078                     Lcd_Set_Cursor@z:
   696                           
   697                           ; 1 bytes @ 0x8
   698  0078                     	ds	1
   699  0079                     Lcd_Set_Cursor@y:
   700                           
   701                           ; 1 bytes @ 0x9
   702  0079                     	ds	1
   703  007A                     ?_canal0:
   704  007A                     Lcd_Set_Cursor@temp:	
   705                           ; 1 bytes @ 0xA
   706                           
   707  007A                     canal0@z:	
   708                           ; 1 bytes @ 0xA
   709                           
   710                           
   711                           ; 2 bytes @ 0xA
   712  007A                     	ds	1
   713  007B                     ??_printMenu:
   714  007B                     ??_seleccionarMultimetroDC:	
   715                           ; 1 bytes @ 0xB
   716                           
   717  007B                     ??_seleccionarMultimetroAC:	
   718                           ; 1 bytes @ 0xB
   719                           
   720  007B                     ??_seleccionarTemperatura:	
   721                           ; 1 bytes @ 0xB
   722                           
   723  007B                     ??_mostrarError:	
   724                           ; 1 bytes @ 0xB
   725                           
   726                           
   727                           ; 1 bytes @ 0xB
   728  007B                     	ds	1
   729  007C                     ??_medirVoltajeDC:
   730  007C                     ??_ADCRead:	
   731                           ; 1 bytes @ 0xC
   732                           
   733  007C                     ??_canal0:	
   734                           ; 1 bytes @ 0xC
   735                           
   736                           
   737                           ; 1 bytes @ 0xC
   738  007C                     	ds	2
   739  007E                     ??_main:
   740                           
   741                           	psect	cstackBANK0
   742  0020                     __pcstackBANK0:	
   743                           ; 1 bytes @ 0xE
   744                           
   745  0020                     ?_ADCRead:
   746                           
   747                           ; 2 bytes @ 0x0
   748  0020                     	ds	5
   749  0025                     main@flag:
   750                           
   751                           ; 2 bytes @ 0x5
   752  0025                     	ds	2
   753  0027                     main@a:
   754                           
   755                           ; 2 bytes @ 0x7
   756  0027                     	ds	2
   757  0029                     main@b:
   758                           
   759                           ; 2 bytes @ 0x9
   760  0029                     	ds	2
   761  002B                     main@c:
   762                           
   763                           ; 2 bytes @ 0xB
   764  002B                     	ds	2
   765                           
   766                           	psect	maintext
   767  0708                     __pmaintext:	
   768 ;;
   769 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   770 ;;
   771 ;; *************** function _main *****************
   772 ;; Defined at:
   773 ;;		line 26 in file "main.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  c               2   11[BANK0 ] int 
   778 ;;  b               2    9[BANK0 ] int 
   779 ;;  a               2    7[BANK0 ] int 
   780 ;;  flag            2    5[BANK0 ] int 
   781 ;;  i               2    0        int 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2   87[None  ] int 
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : B00/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         0      10       0       0       0
   793 ;;      Temps:          0       0       0       0       0
   794 ;;      Totals:         0      10       0       0       0
   795 ;;Total ram usage:       10 bytes
   796 ;; Hardware stack levels required when called:    4
   797 ;; This function calls:
   798 ;;		_ADCInit
   799 ;;		_Lcd_Clear
   800 ;;		_Lcd_Init
   801 ;;		_Lcd_Set_Cursor
   802 ;;		_Lcd_Write_String
   803 ;;		_delay_ms
   804 ;;		_iniciarPullUp
   805 ;;		_medirVoltajeDC
   806 ;;		_mostrarError
   807 ;;		_printMenu
   808 ;;		_seleccionarMultimetroAC
   809 ;;		_seleccionarMultimetroDC
   810 ;;		_seleccionarTemperatura
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _main
   818  0708                     _main:
   819  0708                     l1310:	
   820                           ;incstack = 0
   821                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   822                           
   823                           
   824                           ;main.c: 28:     int flag = 0;
   825  0708  1283               	bcf	3,5	;RP0=0, select bank0
   826  0709  1303               	bcf	3,6	;RP1=0, select bank0
   827  070A  01A5               	clrf	main@flag
   828  070B  01A6               	clrf	main@flag+1
   829  070C                     l1312:
   830                           
   831                           ;main.c: 29:     iniciarPullUp();
   832  070C  120A  118A  239F  120A  118A  	fcall	_iniciarPullUp
   833  0711                     l1314:
   834                           
   835                           ;main.c: 30:     ADCInit();
   836  0711  120A  118A  2389  120A  118A  	fcall	_ADCInit
   837  0716                     l1316:
   838                           
   839                           ;main.c: 31:     Lcd_Init();
   840  0716  120A  118A  25F4  120A  118A  	fcall	_Lcd_Init
   841  071B                     l1318:
   842                           
   843                           ;main.c: 32:     Lcd_Clear();
   844  071B  120A  118A  2376  120A  118A  	fcall	_Lcd_Clear
   845  0720                     l1320:
   846                           
   847                           ;main.c: 33:     Lcd_Set_Cursor(1, 1);
   848  0720  01F4               	clrf	Lcd_Set_Cursor@b
   849  0721  0AF4               	incf	Lcd_Set_Cursor@b,f
   850  0722  3001               	movlw	1
   851  0723  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
   852  0728                     l1322:
   853                           
   854                           ;main.c: 34:     Lcd_Write_String("PRACTICA 2");
   855  0728  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   856  0729  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
   857  072E                     l1324:
   858                           
   859                           ;main.c: 35:     delay_ms(2);
   860  072E  3002               	movlw	2
   861  072F  00F0               	movwf	delay_ms@time
   862  0730  3000               	movlw	0
   863  0731  00F1               	movwf	delay_ms@time+1
   864  0732  120A  118A  255D  120A  118A  	fcall	_delay_ms
   865  0737                     l1326:
   866                           
   867                           ;main.c: 36:     printMenu();
   868  0737  120A  118A  246A  120A  118A  	fcall	_printMenu
   869  073C                     l1328:
   870                           
   871                           ;main.c: 38:         if (!RB0) {
   872  073C  1283               	bcf	3,5	;RP0=0, select bank0
   873  073D  1303               	bcf	3,6	;RP1=0, select bank0
   874  073E  1806               	btfsc	6,0	;volatile
   875  073F  2F41               	goto	u541
   876  0740  2F42               	goto	u540
   877  0741                     u541:
   878  0741  2F7B               	goto	l1348
   879  0742                     u540:
   880  0742                     l1330:
   881                           
   882                           ;main.c: 39:             for (int a = 0; a <= 20; a++) delay_ms(5);
   883  0742  01A7               	clrf	main@a
   884  0743  01A8               	clrf	main@a+1
   885  0744                     l1336:
   886  0744  3005               	movlw	5
   887  0745  00F0               	movwf	delay_ms@time
   888  0746  3000               	movlw	0
   889  0747  00F1               	movwf	delay_ms@time+1
   890  0748  120A  118A  255D  120A  118A  	fcall	_delay_ms
   891  074D                     l1338:
   892  074D  3001               	movlw	1
   893  074E  1283               	bcf	3,5	;RP0=0, select bank0
   894  074F  1303               	bcf	3,6	;RP1=0, select bank0
   895  0750  07A7               	addwf	main@a,f
   896  0751  1803               	skipnc
   897  0752  0AA8               	incf	main@a+1,f
   898  0753  3000               	movlw	0
   899  0754  07A8               	addwf	main@a+1,f
   900  0755                     l1340:
   901  0755  0828               	movf	main@a+1,w
   902  0756  3A80               	xorlw	128
   903  0757  00FF               	movwf	btemp+1
   904  0758  3080               	movlw	128
   905  0759  027F               	subwf	btemp+1,w
   906  075A  1D03               	skipz
   907  075B  2F5E               	goto	u555
   908  075C  3015               	movlw	21
   909  075D  0227               	subwf	main@a,w
   910  075E                     u555:
   911  075E  1C03               	skipc
   912  075F  2F61               	goto	u551
   913  0760  2F62               	goto	u550
   914  0761                     u551:
   915  0761  2F44               	goto	l1336
   916  0762                     u550:
   917  0762                     l91:
   918                           
   919                           ;main.c: 40:             if (!RB0) {
   920  0762  1283               	bcf	3,5	;RP0=0, select bank0
   921  0763  1303               	bcf	3,6	;RP1=0, select bank0
   922  0764  1806               	btfsc	6,0	;volatile
   923  0765  2F67               	goto	u561
   924  0766  2F68               	goto	u560
   925  0767                     u561:
   926  0767  2F7B               	goto	l1348
   927  0768                     u560:
   928  0768                     l1342:
   929                           
   930                           ;main.c: 42:                 seleccionarMultimetroDC();
   931  0768  120A  118A  24C6  120A  118A  	fcall	_seleccionarMultimetroDC
   932  076D                     l1344:
   933                           
   934                           ;main.c: 43:                 medirVoltajeDC();
   935  076D  120A  118A  236F  120A  118A  	fcall	_medirVoltajeDC
   936  0772                     l1346:
   937                           
   938                           ;main.c: 44:                 delay_ms(20);
   939  0772  3014               	movlw	20
   940  0773  00F0               	movwf	delay_ms@time
   941  0774  3000               	movlw	0
   942  0775  00F1               	movwf	delay_ms@time+1
   943  0776  120A  118A  255D  120A  118A  	fcall	_delay_ms
   944  077B                     l1348:
   945                           
   946                           ;main.c: 47:         if (!RB1) {
   947  077B  1283               	bcf	3,5	;RP0=0, select bank0
   948  077C  1303               	bcf	3,6	;RP1=0, select bank0
   949  077D  1886               	btfsc	6,1	;volatile
   950  077E  2F80               	goto	u571
   951  077F  2F81               	goto	u570
   952  0780                     u571:
   953  0780  2FB5               	goto	l1366
   954  0781                     u570:
   955  0781                     l1350:
   956                           
   957                           ;main.c: 48:             for (int b = 0; b <= 20; b++) delay_ms(5);
   958  0781  01A9               	clrf	main@b
   959  0782  01AA               	clrf	main@b+1
   960  0783                     l1356:
   961  0783  3005               	movlw	5
   962  0784  00F0               	movwf	delay_ms@time
   963  0785  3000               	movlw	0
   964  0786  00F1               	movwf	delay_ms@time+1
   965  0787  120A  118A  255D  120A  118A  	fcall	_delay_ms
   966  078C                     l1358:
   967  078C  3001               	movlw	1
   968  078D  1283               	bcf	3,5	;RP0=0, select bank0
   969  078E  1303               	bcf	3,6	;RP1=0, select bank0
   970  078F  07A9               	addwf	main@b,f
   971  0790  1803               	skipnc
   972  0791  0AAA               	incf	main@b+1,f
   973  0792  3000               	movlw	0
   974  0793  07AA               	addwf	main@b+1,f
   975  0794                     l1360:
   976  0794  082A               	movf	main@b+1,w
   977  0795  3A80               	xorlw	128
   978  0796  00FF               	movwf	btemp+1
   979  0797  3080               	movlw	128
   980  0798  027F               	subwf	btemp+1,w
   981  0799  1D03               	skipz
   982  079A  2F9D               	goto	u585
   983  079B  3015               	movlw	21
   984  079C  0229               	subwf	main@b,w
   985  079D                     u585:
   986  079D  1C03               	skipc
   987  079E  2FA0               	goto	u581
   988  079F  2FA1               	goto	u580
   989  07A0                     u581:
   990  07A0  2F83               	goto	l1356
   991  07A1                     u580:
   992  07A1                     l95:
   993                           
   994                           ;main.c: 49:             if (!RB1) {
   995  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   996  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   997  07A3  1886               	btfsc	6,1	;volatile
   998  07A4  2FA6               	goto	u591
   999  07A5  2FA7               	goto	u590
  1000  07A6                     u591:
  1001  07A6  2FB5               	goto	l1366
  1002  07A7                     u590:
  1003  07A7                     l1362:
  1004                           
  1005                           ;main.c: 51:                 seleccionarMultimetroAC();
  1006  07A7  120A  118A  2498  120A  118A  	fcall	_seleccionarMultimetroAC
  1007  07AC                     l1364:
  1008                           
  1009                           ;main.c: 52:                 delay_ms(20);
  1010  07AC  3014               	movlw	20
  1011  07AD  00F0               	movwf	delay_ms@time
  1012  07AE  3000               	movlw	0
  1013  07AF  00F1               	movwf	delay_ms@time+1
  1014  07B0  120A  118A  255D  120A  118A  	fcall	_delay_ms
  1015  07B5                     l1366:
  1016                           
  1017                           ;main.c: 55:         if (!RB2) {
  1018  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1019  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1020  07B7  1906               	btfsc	6,2	;volatile
  1021  07B8  2FBA               	goto	u601
  1022  07B9  2FBB               	goto	u600
  1023  07BA                     u601:
  1024  07BA  2FEF               	goto	l1384
  1025  07BB                     u600:
  1026  07BB                     l1368:
  1027                           
  1028                           ;main.c: 56:             for (int c = 0; c <= 20; c++) delay_ms(5);
  1029  07BB  01AB               	clrf	main@c
  1030  07BC  01AC               	clrf	main@c+1
  1031  07BD                     l1374:
  1032  07BD  3005               	movlw	5
  1033  07BE  00F0               	movwf	delay_ms@time
  1034  07BF  3000               	movlw	0
  1035  07C0  00F1               	movwf	delay_ms@time+1
  1036  07C1  120A  118A  255D  120A  118A  	fcall	_delay_ms
  1037  07C6                     l1376:
  1038  07C6  3001               	movlw	1
  1039  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1040  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1041  07C9  07AB               	addwf	main@c,f
  1042  07CA  1803               	skipnc
  1043  07CB  0AAC               	incf	main@c+1,f
  1044  07CC  3000               	movlw	0
  1045  07CD  07AC               	addwf	main@c+1,f
  1046  07CE                     l1378:
  1047  07CE  082C               	movf	main@c+1,w
  1048  07CF  3A80               	xorlw	128
  1049  07D0  00FF               	movwf	btemp+1
  1050  07D1  3080               	movlw	128
  1051  07D2  027F               	subwf	btemp+1,w
  1052  07D3  1D03               	skipz
  1053  07D4  2FD7               	goto	u615
  1054  07D5  3015               	movlw	21
  1055  07D6  022B               	subwf	main@c,w
  1056  07D7                     u615:
  1057  07D7  1C03               	skipc
  1058  07D8  2FDA               	goto	u611
  1059  07D9  2FDB               	goto	u610
  1060  07DA                     u611:
  1061  07DA  2FBD               	goto	l1374
  1062  07DB                     u610:
  1063  07DB                     l99:
  1064                           
  1065                           ;main.c: 57:             if (!RB2) {
  1066  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1067  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1068  07DD  1906               	btfsc	6,2	;volatile
  1069  07DE  2FE0               	goto	u621
  1070  07DF  2FE1               	goto	u620
  1071  07E0                     u621:
  1072  07E0  2FEF               	goto	l1384
  1073  07E1                     u620:
  1074  07E1                     l1380:
  1075                           
  1076                           ;main.c: 59:                 seleccionarTemperatura();
  1077  07E1  120A  118A  24F4  120A  118A  	fcall	_seleccionarTemperatura
  1078  07E6                     l1382:
  1079                           
  1080                           ;main.c: 60:                 delay_ms(20);
  1081  07E6  3014               	movlw	20
  1082  07E7  00F0               	movwf	delay_ms@time
  1083  07E8  3000               	movlw	0
  1084  07E9  00F1               	movwf	delay_ms@time+1
  1085  07EA  120A  118A  255D  120A  118A  	fcall	_delay_ms
  1086  07EF                     l1384:
  1087                           
  1088                           ;main.c: 63:         mostrarError();
  1089  07EF  120A  118A  243C  120A  118A  	fcall	_mostrarError
  1090  07F4  2F37               	goto	l1326
  1091  07F5  120A  118A  2800   	ljmp	start
  1092  07F8                     __end_of_main:
  1093                           
  1094                           	psect	text1
  1095  04F4                     __ptext1:	
  1096 ;; *************** function _seleccionarTemperatura *****************
  1097 ;; Defined at:
  1098 ;;		line 56 in file "config.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0
  1114 ;;      Temps:          3       0       0       0       0
  1115 ;;      Totals:         3       0       0       0       0
  1116 ;;Total ram usage:        3 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    3
  1119 ;; This function calls:
  1120 ;;		_Lcd_Clear
  1121 ;;		_Lcd_Set_Cursor
  1122 ;;		_Lcd_Write_String
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           
  1129                           ;psect for function _seleccionarTemperatura
  1130  04F4                     _seleccionarTemperatura:
  1131  04F4                     l1294:	
  1132                           ;incstack = 0
  1133                           ; Regs used in _seleccionarTemperatura: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1134                           
  1135                           
  1136                           ;config.c: 57:     Lcd_Clear();
  1137  04F4  120A  118A  2376  120A  118A  	fcall	_Lcd_Clear
  1138                           
  1139                           ;config.c: 58:     Lcd_Set_Cursor(1, 1);
  1140  04F9  01F4               	clrf	Lcd_Set_Cursor@b
  1141  04FA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1142  04FB  3001               	movlw	1
  1143  04FC  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1144  0501                     l1296:
  1145                           
  1146                           ;config.c: 59:     Lcd_Write_String("Opcion Elegida:");
  1147  0501  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1148  0502  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1149  0507                     l1298:
  1150                           
  1151                           ;config.c: 60:     Lcd_Set_Cursor(2, 1);
  1152  0507  01F4               	clrf	Lcd_Set_Cursor@b
  1153  0508  0AF4               	incf	Lcd_Set_Cursor@b,f
  1154  0509  3002               	movlw	2
  1155  050A  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1156                           
  1157                           ;config.c: 61:     Lcd_Write_String("Multimetro AC:");
  1158  050F  3032               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1159  0510  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1160  0515                     l1300:
  1161                           
  1162                           ;config.c: 62:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1163  0515  3003               	movlw	3
  1164  0516  00FD               	movwf	??_seleccionarTemperatura+2
  1165  0517  3008               	movlw	8
  1166  0518  00FC               	movwf	??_seleccionarTemperatura+1
  1167  0519  3077               	movlw	119
  1168  051A  00FB               	movwf	??_seleccionarTemperatura
  1169  051B                     u637:
  1170  051B  0BFB               	decfsz	??_seleccionarTemperatura,f
  1171  051C  2D1B               	goto	u637
  1172  051D  0BFC               	decfsz	??_seleccionarTemperatura+1,f
  1173  051E  2D1B               	goto	u637
  1174  051F  0BFD               	decfsz	??_seleccionarTemperatura+2,f
  1175  0520  2D1B               	goto	u637
  1176  0521                     l167:
  1177  0521  0008               	return
  1178  0522                     __end_of_seleccionarTemperatura:
  1179                           
  1180                           	psect	text2
  1181  04C6                     __ptext2:	
  1182 ;; *************** function _seleccionarMultimetroDC *****************
  1183 ;; Defined at:
  1184 ;;		line 38 in file "config.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          3       0       0       0       0
  1201 ;;      Totals:         3       0       0       0       0
  1202 ;;Total ram usage:        3 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    3
  1205 ;; This function calls:
  1206 ;;		_Lcd_Clear
  1207 ;;		_Lcd_Set_Cursor
  1208 ;;		_Lcd_Write_String
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           
  1215                           ;psect for function _seleccionarMultimetroDC
  1216  04C6                     _seleccionarMultimetroDC:
  1217  04C6                     l1276:	
  1218                           ;incstack = 0
  1219                           ; Regs used in _seleccionarMultimetroDC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1220                           
  1221                           
  1222                           ;config.c: 39:     Lcd_Clear();
  1223  04C6  120A  118A  2376  120A  118A  	fcall	_Lcd_Clear
  1224                           
  1225                           ;config.c: 40:     Lcd_Set_Cursor(1, 1);
  1226  04CB  01F4               	clrf	Lcd_Set_Cursor@b
  1227  04CC  0AF4               	incf	Lcd_Set_Cursor@b,f
  1228  04CD  3001               	movlw	1
  1229  04CE  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1230  04D3                     l1278:
  1231                           
  1232                           ;config.c: 41:     Lcd_Write_String("Opcion Elegida:");
  1233  04D3  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1234  04D4  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1235  04D9                     l1280:
  1236                           
  1237                           ;config.c: 42:     Lcd_Set_Cursor(2, 1);
  1238  04D9  01F4               	clrf	Lcd_Set_Cursor@b
  1239  04DA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1240  04DB  3002               	movlw	2
  1241  04DC  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1242                           
  1243                           ;config.c: 43:     Lcd_Write_String("Multimetro DC:");
  1244  04E1  3041               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1245  04E2  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1246  04E7                     l1282:
  1247                           
  1248                           ;config.c: 44:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1249  04E7  3003               	movlw	3
  1250  04E8  00FD               	movwf	??_seleccionarMultimetroDC+2
  1251  04E9  3008               	movlw	8
  1252  04EA  00FC               	movwf	??_seleccionarMultimetroDC+1
  1253  04EB  3077               	movlw	119
  1254  04EC  00FB               	movwf	??_seleccionarMultimetroDC
  1255  04ED                     u647:
  1256  04ED  0BFB               	decfsz	??_seleccionarMultimetroDC,f
  1257  04EE  2CED               	goto	u647
  1258  04EF  0BFC               	decfsz	??_seleccionarMultimetroDC+1,f
  1259  04F0  2CED               	goto	u647
  1260  04F1  0BFD               	decfsz	??_seleccionarMultimetroDC+2,f
  1261  04F2  2CED               	goto	u647
  1262  04F3                     l161:
  1263  04F3  0008               	return
  1264  04F4                     __end_of_seleccionarMultimetroDC:
  1265                           
  1266                           	psect	text3
  1267  0498                     __ptext3:	
  1268 ;; *************** function _seleccionarMultimetroAC *****************
  1269 ;; Defined at:
  1270 ;;		line 47 in file "config.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0
  1286 ;;      Temps:          3       0       0       0       0
  1287 ;;      Totals:         3       0       0       0       0
  1288 ;;Total ram usage:        3 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    3
  1291 ;; This function calls:
  1292 ;;		_Lcd_Clear
  1293 ;;		_Lcd_Set_Cursor
  1294 ;;		_Lcd_Write_String
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _seleccionarMultimetroAC
  1302  0498                     _seleccionarMultimetroAC:
  1303  0498                     l1286:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _seleccionarMultimetroAC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1306                           
  1307                           
  1308                           ;config.c: 48:     Lcd_Clear();
  1309  0498  120A  118A  2376  120A  118A  	fcall	_Lcd_Clear
  1310                           
  1311                           ;config.c: 49:     Lcd_Set_Cursor(1, 1);
  1312  049D  01F4               	clrf	Lcd_Set_Cursor@b
  1313  049E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1314  049F  3001               	movlw	1
  1315  04A0  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1316  04A5                     l1288:
  1317                           
  1318                           ;config.c: 50:     Lcd_Write_String("Opcion Elegida:");
  1319  04A5  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1320  04A6  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1321  04AB                     l1290:
  1322                           
  1323                           ;config.c: 51:     Lcd_Set_Cursor(2, 1);
  1324  04AB  01F4               	clrf	Lcd_Set_Cursor@b
  1325  04AC  0AF4               	incf	Lcd_Set_Cursor@b,f
  1326  04AD  3002               	movlw	2
  1327  04AE  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1328                           
  1329                           ;config.c: 52:     Lcd_Write_String("Multimetro AC:");
  1330  04B3  3032               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1331  04B4  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1332  04B9                     l1292:
  1333                           
  1334                           ;config.c: 53:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1335  04B9  3003               	movlw	3
  1336  04BA  00FD               	movwf	??_seleccionarMultimetroAC+2
  1337  04BB  3008               	movlw	8
  1338  04BC  00FC               	movwf	??_seleccionarMultimetroAC+1
  1339  04BD  3077               	movlw	119
  1340  04BE  00FB               	movwf	??_seleccionarMultimetroAC
  1341  04BF                     u657:
  1342  04BF  0BFB               	decfsz	??_seleccionarMultimetroAC,f
  1343  04C0  2CBF               	goto	u657
  1344  04C1  0BFC               	decfsz	??_seleccionarMultimetroAC+1,f
  1345  04C2  2CBF               	goto	u657
  1346  04C3  0BFD               	decfsz	??_seleccionarMultimetroAC+2,f
  1347  04C4  2CBF               	goto	u657
  1348  04C5                     l164:
  1349  04C5  0008               	return
  1350  04C6                     __end_of_seleccionarMultimetroAC:
  1351                           
  1352                           	psect	text4
  1353  046A                     __ptext4:	
  1354 ;; *************** function _printMenu *****************
  1355 ;; Defined at:
  1356 ;;		line 29 in file "config.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0
  1372 ;;      Temps:          3       0       0       0       0
  1373 ;;      Totals:         3       0       0       0       0
  1374 ;;Total ram usage:        3 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    3
  1377 ;; This function calls:
  1378 ;;		_Lcd_Clear
  1379 ;;		_Lcd_Set_Cursor
  1380 ;;		_Lcd_Write_String
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _printMenu
  1388  046A                     _printMenu:
  1389  046A                     l1268:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _printMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1392                           
  1393                           
  1394                           ;config.c: 30:     Lcd_Clear();
  1395  046A  120A  118A  2376  120A  118A  	fcall	_Lcd_Clear
  1396                           
  1397                           ;config.c: 31:     Lcd_Set_Cursor(1, 1);
  1398  046F  01F4               	clrf	Lcd_Set_Cursor@b
  1399  0470  0AF4               	incf	Lcd_Set_Cursor@b,f
  1400  0471  3001               	movlw	1
  1401  0472  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1402  0477                     l1270:
  1403                           
  1404                           ;config.c: 32:     Lcd_Write_String("Elegir opcion:");
  1405  0477  3050               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1406  0478  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1407  047D                     l1272:
  1408                           
  1409                           ;config.c: 33:     Lcd_Set_Cursor(2, 1);
  1410  047D  01F4               	clrf	Lcd_Set_Cursor@b
  1411  047E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1412  047F  3002               	movlw	2
  1413  0480  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1414                           
  1415                           ;config.c: 34:     Lcd_Write_String("1:DC 2:AC 3:Temp");
  1416  0485  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1417  0486  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1418  048B                     l1274:
  1419                           
  1420                           ;config.c: 35:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1421  048B  3003               	movlw	3
  1422  048C  00FD               	movwf	??_printMenu+2
  1423  048D  3008               	movlw	8
  1424  048E  00FC               	movwf	??_printMenu+1
  1425  048F  3077               	movlw	119
  1426  0490  00FB               	movwf	??_printMenu
  1427  0491                     u667:
  1428  0491  0BFB               	decfsz	??_printMenu,f
  1429  0492  2C91               	goto	u667
  1430  0493  0BFC               	decfsz	??_printMenu+1,f
  1431  0494  2C91               	goto	u667
  1432  0495  0BFD               	decfsz	??_printMenu+2,f
  1433  0496  2C91               	goto	u667
  1434  0497                     l158:
  1435  0497  0008               	return
  1436  0498                     __end_of_printMenu:
  1437                           
  1438                           	psect	text5
  1439  043C                     __ptext5:	
  1440 ;; *************** function _mostrarError *****************
  1441 ;; Defined at:
  1442 ;;		line 66 in file "config.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          3       0       0       0       0
  1459 ;;      Totals:         3       0       0       0       0
  1460 ;;Total ram usage:        3 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    3
  1463 ;; This function calls:
  1464 ;;		_Lcd_Clear
  1465 ;;		_Lcd_Set_Cursor
  1466 ;;		_Lcd_Write_String
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _mostrarError
  1474  043C                     _mostrarError:
  1475  043C                     l1302:	
  1476                           ;incstack = 0
  1477                           ; Regs used in _mostrarError: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1478                           
  1479                           
  1480                           ;config.c: 67:     Lcd_Clear();
  1481  043C  120A  118A  2376  120A  118A  	fcall	_Lcd_Clear
  1482                           
  1483                           ;config.c: 68:     Lcd_Set_Cursor(1, 1);
  1484  0441  01F4               	clrf	Lcd_Set_Cursor@b
  1485  0442  0AF4               	incf	Lcd_Set_Cursor@b,f
  1486  0443  3001               	movlw	1
  1487  0444  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1488  0449                     l1304:
  1489                           
  1490                           ;config.c: 69:     Lcd_Write_String("Error Seleccion");
  1491  0449  3022               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1492  044A  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1493  044F                     l1306:
  1494                           
  1495                           ;config.c: 70:     Lcd_Set_Cursor(2, 1);
  1496  044F  01F4               	clrf	Lcd_Set_Cursor@b
  1497  0450  0AF4               	incf	Lcd_Set_Cursor@b,f
  1498  0451  3002               	movlw	2
  1499  0452  120A  118A  259C  120A  118A  	fcall	_Lcd_Set_Cursor
  1500                           
  1501                           ;config.c: 71:     Lcd_Write_String("Valor: ");
  1502  0457  306A               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1503  0458  120A  118A  2417  120A  118A  	fcall	_Lcd_Write_String
  1504  045D                     l1308:
  1505                           
  1506                           ;config.c: 72:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1507  045D  3003               	movlw	3
  1508  045E  00FD               	movwf	??_mostrarError+2
  1509  045F  3008               	movlw	8
  1510  0460  00FC               	movwf	??_mostrarError+1
  1511  0461  3077               	movlw	119
  1512  0462  00FB               	movwf	??_mostrarError
  1513  0463                     u677:
  1514  0463  0BFB               	decfsz	??_mostrarError,f
  1515  0464  2C63               	goto	u677
  1516  0465  0BFC               	decfsz	??_mostrarError+1,f
  1517  0466  2C63               	goto	u677
  1518  0467  0BFD               	decfsz	??_mostrarError+2,f
  1519  0468  2C63               	goto	u677
  1520  0469                     l170:
  1521  0469  0008               	return
  1522  046A                     __end_of_mostrarError:
  1523                           
  1524                           	psect	text6
  1525  0417                     __ptext6:	
  1526 ;; *************** function _Lcd_Write_String *****************
  1527 ;; Defined at:
  1528 ;;		line 129 in file "lcd.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  a               1    wreg     PTR unsigned char 
  1531 ;;		 -> STR_11(8), STR_10(16), STR_9(15), STR_8(16), 
  1532 ;;		 -> STR_7(15), STR_6(16), STR_5(15), STR_4(16), 
  1533 ;;		 -> STR_3(17), STR_2(15), STR_1(11), 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  a               1    7[COMMON] PTR unsigned char 
  1536 ;;		 -> STR_11(8), STR_10(16), STR_9(15), STR_8(16), 
  1537 ;;		 -> STR_7(15), STR_6(16), STR_5(15), STR_4(16), 
  1538 ;;		 -> STR_3(17), STR_2(15), STR_1(11), 
  1539 ;;  i               2    5[COMMON] int 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         3       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0
  1552 ;;      Totals:         3       0       0       0       0
  1553 ;;Total ram usage:        3 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    2
  1556 ;; This function calls:
  1557 ;;		_Lcd_Write_Char
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;;		_printMenu
  1561 ;;		_seleccionarMultimetroDC
  1562 ;;		_seleccionarMultimetroAC
  1563 ;;		_seleccionarTemperatura
  1564 ;;		_mostrarError
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _Lcd_Write_String
  1570  0417                     _Lcd_Write_String:
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1574                           ;Lcd_Write_String@a stored from wreg
  1575  0417  00F7               	movwf	Lcd_Write_String@a
  1576  0418                     l1194:
  1577  0418  01F5               	clrf	Lcd_Write_String@i
  1578  0419  01F6               	clrf	Lcd_Write_String@i+1
  1579  041A  2C2E               	goto	l1200
  1580  041B                     l1196:
  1581  041B  0875               	movf	Lcd_Write_String@i,w
  1582  041C  0777               	addwf	Lcd_Write_String@a,w
  1583  041D  0084               	movwf	4
  1584  041E  120A  118A  2003  120A  118A  	fcall	stringdir
  1585  0423  120A  118A  2522  120A  118A  	fcall	_Lcd_Write_Char
  1586  0428                     l1198:
  1587  0428  3001               	movlw	1
  1588  0429  07F5               	addwf	Lcd_Write_String@i,f
  1589  042A  1803               	skipnc
  1590  042B  0AF6               	incf	Lcd_Write_String@i+1,f
  1591  042C  3000               	movlw	0
  1592  042D  07F6               	addwf	Lcd_Write_String@i+1,f
  1593  042E                     l1200:
  1594  042E  0875               	movf	Lcd_Write_String@i,w
  1595  042F  0777               	addwf	Lcd_Write_String@a,w
  1596  0430  0084               	movwf	4
  1597  0431  120A  118A  2003  120A  118A  	fcall	stringdir
  1598  0436  3A00               	xorlw	0
  1599  0437  1D03               	skipz
  1600  0438  2C3A               	goto	u441
  1601  0439  2C3B               	goto	u440
  1602  043A                     u441:
  1603  043A  2C1B               	goto	l1196
  1604  043B                     u440:
  1605  043B                     l51:
  1606  043B  0008               	return
  1607  043C                     __end_of_Lcd_Write_String:
  1608                           
  1609                           	psect	text7
  1610  0522                     __ptext7:	
  1611 ;; *************** function _Lcd_Write_Char *****************
  1612 ;; Defined at:
  1613 ;;		line 112 in file "lcd.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  a               1    wreg     unsigned char 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  a               1    4[COMMON] unsigned char 
  1618 ;;  y               1    3[COMMON] unsigned char 
  1619 ;;  temp            1    2[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         3       0       0       0       0
  1631 ;;      Temps:          1       0       0       0       0
  1632 ;;      Totals:         4       0       0       0       0
  1633 ;;Total ram usage:        4 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    1
  1636 ;; This function calls:
  1637 ;;		_Lcd_Port
  1638 ;; This function is called by:
  1639 ;;		_Lcd_Write_String
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _Lcd_Write_Char
  1645  0522                     _Lcd_Write_Char:
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1649                           ;Lcd_Write_Char@a stored from wreg
  1650  0522  00F4               	movwf	Lcd_Write_Char@a
  1651  0523                     l1126:
  1652  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0524  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0525  1108               	bcf	8,2	;volatile
  1655  0526                     l1128:
  1656  0526  0874               	movf	Lcd_Write_Char@a,w
  1657  0527  390F               	andlw	15
  1658  0528  00F1               	movwf	??_Lcd_Write_Char
  1659  0529  0871               	movf	??_Lcd_Write_Char,w
  1660  052A  00F2               	movwf	Lcd_Write_Char@temp
  1661  052B  0874               	movf	Lcd_Write_Char@a,w
  1662  052C  39F0               	andlw	240
  1663  052D  00F1               	movwf	??_Lcd_Write_Char
  1664  052E  0871               	movf	??_Lcd_Write_Char,w
  1665  052F  00F3               	movwf	Lcd_Write_Char@y
  1666  0530                     l1130:
  1667  0530  1488               	bsf	8,1	;volatile
  1668  0531                     l1132:
  1669  0531  0873               	movf	Lcd_Write_Char@y,w
  1670  0532  00F1               	movwf	??_Lcd_Write_Char
  1671  0533  3004               	movlw	4
  1672  0534                     u385:
  1673  0534  1003               	clrc
  1674  0535  0CF1               	rrf	??_Lcd_Write_Char,f
  1675  0536  3EFF               	addlw	-1
  1676  0537  1D03               	skipz
  1677  0538  2D34               	goto	u385
  1678  0539  0871               	movf	??_Lcd_Write_Char,w
  1679  053A  120A  118A  23D3  120A  118A  	fcall	_Lcd_Port
  1680  053F                     l1134:
  1681  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0541  1408               	bsf	8,0	;volatile
  1684  0542                     l1136:
  1685  0542  301A               	movlw	26
  1686  0543  00F1               	movwf	??_Lcd_Write_Char
  1687  0544                     u687:
  1688  0544  0BF1               	decfsz	??_Lcd_Write_Char,f
  1689  0545  2D44               	goto	u687
  1690  0546  0000               	nop
  1691  0547                     l1138:
  1692  0547  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0548  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0549  1008               	bcf	8,0	;volatile
  1695  054A                     l1140:
  1696  054A  0872               	movf	Lcd_Write_Char@temp,w
  1697  054B  120A  118A  23D3  120A  118A  	fcall	_Lcd_Port
  1698  0550                     l1142:
  1699  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0552  1408               	bsf	8,0	;volatile
  1702  0553                     l1144:
  1703  0553  301A               	movlw	26
  1704  0554  00F1               	movwf	??_Lcd_Write_Char
  1705  0555                     u697:
  1706  0555  0BF1               	decfsz	??_Lcd_Write_Char,f
  1707  0556  2D55               	goto	u697
  1708  0557  0000               	nop
  1709  0558                     l1146:
  1710  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1712  055A  1008               	bcf	8,0	;volatile
  1713  055B                     l1148:
  1714  055B  1108               	bcf	8,2	;volatile
  1715  055C                     l45:
  1716  055C  0008               	return
  1717  055D                     __end_of_Lcd_Write_Char:
  1718                           
  1719                           	psect	text8
  1720  059C                     __ptext8:	
  1721 ;; *************** function _Lcd_Set_Cursor *****************
  1722 ;; Defined at:
  1723 ;;		line 74 in file "lcd.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  a               1    wreg     unsigned char 
  1726 ;;  b               1    4[COMMON] unsigned char 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  a               1    7[COMMON] unsigned char 
  1729 ;;  temp            1   10[COMMON] unsigned char 
  1730 ;;  y               1    9[COMMON] unsigned char 
  1731 ;;  z               1    8[COMMON] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         1       0       0       0       0
  1742 ;;      Locals:         4       0       0       0       0
  1743 ;;      Temps:          2       0       0       0       0
  1744 ;;      Totals:         7       0       0       0       0
  1745 ;;Total ram usage:        7 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    2
  1748 ;; This function calls:
  1749 ;;		_Lcd_Cmd
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;;		_printMenu
  1753 ;;		_seleccionarMultimetroDC
  1754 ;;		_seleccionarMultimetroAC
  1755 ;;		_seleccionarTemperatura
  1756 ;;		_mostrarError
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _Lcd_Set_Cursor
  1762  059C                     _Lcd_Set_Cursor:
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1766                           ;Lcd_Set_Cursor@a stored from wreg
  1767  059C  00F7               	movwf	Lcd_Set_Cursor@a
  1768  059D                     l1170:
  1769                           
  1770                           ;lcd.c: 75: }
  1771  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1772  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1773  059F  1108               	bcf	8,2	;volatile
  1774  05A0                     l1172:
  1775                           
  1776                           ;lcd.c: 76: ;lcd.c: 77: void Lcd_Write_Char(char a) {
  1777  05A0  0377               	decf	Lcd_Set_Cursor@a,w
  1778  05A1  1D03               	btfss	3,2
  1779  05A2  2DA4               	goto	u401
  1780  05A3  2DA5               	goto	u400
  1781  05A4                     u401:
  1782  05A4  2DC8               	goto	l1182
  1783  05A5                     u400:
  1784  05A5                     l1174:
  1785                           
  1786                           ;lcd.c: 78:     RD2 = 0;
  1787  05A5  0874               	movf	Lcd_Set_Cursor@b,w
  1788  05A6  3E7F               	addlw	127
  1789  05A7  00F5               	movwf	??_Lcd_Set_Cursor
  1790  05A8  0875               	movf	??_Lcd_Set_Cursor,w
  1791  05A9  00FA               	movwf	Lcd_Set_Cursor@temp
  1792                           
  1793                           ;lcd.c: 79:     char temp, y;
  1794  05AA  087A               	movf	Lcd_Set_Cursor@temp,w
  1795  05AB  00F5               	movwf	??_Lcd_Set_Cursor
  1796  05AC  3004               	movlw	4
  1797  05AD                     u415:
  1798  05AD  1003               	clrc
  1799  05AE  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1800  05AF  3EFF               	addlw	-1
  1801  05B0  1D03               	skipz
  1802  05B1  2DAD               	goto	u415
  1803  05B2  0875               	movf	??_Lcd_Set_Cursor,w
  1804  05B3  00F6               	movwf	??_Lcd_Set_Cursor+1
  1805  05B4  0876               	movf	??_Lcd_Set_Cursor+1,w
  1806  05B5  00F8               	movwf	Lcd_Set_Cursor@z
  1807  05B6                     l1176:
  1808                           
  1809                           ;lcd.c: 80:     temp = a & 0x0F;
  1810  05B6  087A               	movf	Lcd_Set_Cursor@temp,w
  1811  05B7  390F               	andlw	15
  1812  05B8  00F5               	movwf	??_Lcd_Set_Cursor
  1813  05B9  0875               	movf	??_Lcd_Set_Cursor,w
  1814  05BA  00F9               	movwf	Lcd_Set_Cursor@y
  1815  05BB                     l1178:
  1816                           
  1817                           ;lcd.c: 81:     y = a & 0xF0;
  1818  05BB  0878               	movf	Lcd_Set_Cursor@z,w
  1819  05BC  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  1820  05C1                     l1180:
  1821                           
  1822                           ;lcd.c: 82:     RD1 = 1;
  1823  05C1  0879               	movf	Lcd_Set_Cursor@y,w
  1824  05C2  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  1825                           
  1826                           ;lcd.c: 83:     Lcd_Port(y >> 4);
  1827  05C7  2DF0               	goto	l1192
  1828  05C8                     l1182:
  1829  05C8  3002               	movlw	2
  1830  05C9  0677               	xorwf	Lcd_Set_Cursor@a,w
  1831  05CA  1D03               	btfss	3,2
  1832  05CB  2DCD               	goto	u421
  1833  05CC  2DCE               	goto	u420
  1834  05CD                     u421:
  1835  05CD  2DF0               	goto	l1192
  1836  05CE                     u420:
  1837  05CE                     l1184:
  1838                           
  1839                           ;lcd.c: 84:     RD0 = 1;
  1840  05CE  0874               	movf	Lcd_Set_Cursor@b,w
  1841  05CF  3EBF               	addlw	191
  1842  05D0  00F5               	movwf	??_Lcd_Set_Cursor
  1843  05D1  0875               	movf	??_Lcd_Set_Cursor,w
  1844  05D2  00FA               	movwf	Lcd_Set_Cursor@temp
  1845                           
  1846                           ;lcd.c: 85:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1847  05D3  087A               	movf	Lcd_Set_Cursor@temp,w
  1848  05D4  00F5               	movwf	??_Lcd_Set_Cursor
  1849  05D5  3004               	movlw	4
  1850  05D6                     u435:
  1851  05D6  1003               	clrc
  1852  05D7  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1853  05D8  3EFF               	addlw	-1
  1854  05D9  1D03               	skipz
  1855  05DA  2DD6               	goto	u435
  1856  05DB  0875               	movf	??_Lcd_Set_Cursor,w
  1857  05DC  00F6               	movwf	??_Lcd_Set_Cursor+1
  1858  05DD  0876               	movf	??_Lcd_Set_Cursor+1,w
  1859  05DE  00F8               	movwf	Lcd_Set_Cursor@z
  1860  05DF                     l1186:
  1861                           
  1862                           ;lcd.c: 86:     RD0 = 0;
  1863  05DF  087A               	movf	Lcd_Set_Cursor@temp,w
  1864  05E0  390F               	andlw	15
  1865  05E1  00F5               	movwf	??_Lcd_Set_Cursor
  1866  05E2  0875               	movf	??_Lcd_Set_Cursor,w
  1867  05E3  00F9               	movwf	Lcd_Set_Cursor@y
  1868  05E4                     l1188:
  1869                           
  1870                           ;lcd.c: 87:     Lcd_Port(temp);
  1871  05E4  0878               	movf	Lcd_Set_Cursor@z,w
  1872  05E5  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  1873  05EA                     l1190:
  1874                           
  1875                           ;lcd.c: 88:     RD0 = 1;
  1876  05EA  0879               	movf	Lcd_Set_Cursor@y,w
  1877  05EB  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  1878  05F0                     l1192:
  1879                           
  1880                           ;lcd.c: 90:     RD0 = 0;
  1881  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1882  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1883  05F2  1108               	bcf	8,2	;volatile
  1884  05F3                     l39:
  1885  05F3  0008               	return
  1886  05F4                     __end_of_Lcd_Set_Cursor:
  1887                           
  1888                           	psect	text9
  1889  0376                     __ptext9:	
  1890 ;; *************** function _Lcd_Clear *****************
  1891 ;; Defined at:
  1892 ;;		line 67 in file "lcd.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    2
  1913 ;; This function calls:
  1914 ;;		_Lcd_Cmd
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;;		_printMenu
  1918 ;;		_seleccionarMultimetroDC
  1919 ;;		_seleccionarMultimetroAC
  1920 ;;		_seleccionarTemperatura
  1921 ;;		_mostrarError
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _Lcd_Clear
  1927  0376                     _Lcd_Clear:
  1928  0376                     l1164:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1931                           
  1932                           
  1933                           ;lcd.c: 68:     Lcd_Cmd(0x02);
  1934  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0378  1108               	bcf	8,2	;volatile
  1937  0379                     l1166:
  1938                           
  1939                           ;lcd.c: 69:     Lcd_Cmd(0x02);
  1940  0379  3000               	movlw	0
  1941  037A  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  1942                           
  1943                           ;lcd.c: 70:     Lcd_Cmd(0x08);
  1944  037F  3001               	movlw	1
  1945  0380  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  1946  0385                     l1168:
  1947                           
  1948                           ;lcd.c: 71:     Lcd_Cmd(0x00);
  1949  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0387  1108               	bcf	8,2	;volatile
  1952  0388                     l33:
  1953  0388  0008               	return
  1954  0389                     __end_of_Lcd_Clear:
  1955                           
  1956                           	psect	text10
  1957  036F                     __ptext10:	
  1958 ;; *************** function _medirVoltajeDC *****************
  1959 ;; Defined at:
  1960 ;;		line 75 in file "config.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  val             2    0        unsigned int 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1974 ;;      Params:         0       0       0       0       0
  1975 ;;      Locals:         2       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0
  1977 ;;      Totals:         2       0       0       0       0
  1978 ;;Total ram usage:        2 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    3
  1981 ;; This function calls:
  1982 ;;		_ADCRead
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _medirVoltajeDC
  1990  036F                     _medirVoltajeDC:
  1991  036F                     l1284:	
  1992                           ;incstack = 0
  1993                           ; Regs used in _medirVoltajeDC: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1994                           
  1995  036F  3002               	movlw	2
  1996  0370  120A  118A  2654  120A  118A  	fcall	_ADCRead
  1997  0375                     l173:
  1998  0375  0008               	return
  1999  0376                     __end_of_medirVoltajeDC:
  2000                           
  2001                           	psect	text11
  2002  0654                     __ptext11:	
  2003 ;; *************** function _ADCRead *****************
  2004 ;; Defined at:
  2005 ;;		line 101 in file "config.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  channel         1    wreg     unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  channel         1    0[COMMON] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  2    0[BANK0 ] unsigned int 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       3       0       0       0
  2020 ;;      Locals:         0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0
  2022 ;;      Totals:         0       3       0       0       0
  2023 ;;Total ram usage:        3 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    2
  2026 ;; This function calls:
  2027 ;;		_canal0
  2028 ;; This function is called by:
  2029 ;;		_medirVoltajeDC
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _ADCRead
  2035  0654                     _ADCRead:
  2036  0654                     l182:	
  2037                           ;incstack = 0
  2038                           ; Regs used in _ADCRead: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2039                           ;config.c: 102: bucle:
  2040                           
  2041  0654                     l1202:
  2042                           
  2043                           ;config.c: 103:     canal0(1);
  2044  0654  3001               	movlw	1
  2045  0655  00FA               	movwf	canal0@z
  2046  0656  3000               	movlw	0
  2047  0657  00FB               	movwf	canal0@z+1
  2048  0658  120A  118A  23F5  120A  118A  	fcall	_canal0
  2049  065D                     l1204:
  2050                           
  2051                           ;config.c: 104:     if (ADRES < 127)
  2052  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2053  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2054  065F  082E               	movf	_ADRES+1,w
  2055  0660  3A80               	xorlw	128
  2056  0661  00FF               	movwf	btemp+1
  2057  0662  3080               	movlw	128
  2058  0663  027F               	subwf	btemp+1,w
  2059  0664  1D03               	skipz
  2060  0665  2E68               	goto	u455
  2061  0666  307F               	movlw	127
  2062  0667  022D               	subwf	_ADRES,w
  2063  0668                     u455:
  2064  0668  1803               	skipnc
  2065  0669  2E6B               	goto	u451
  2066  066A  2E6C               	goto	u450
  2067  066B                     u451:
  2068  066B  2E6F               	goto	l1208
  2069  066C                     u450:
  2070  066C                     l1206:
  2071                           
  2072                           ;config.c: 105:         PORTB = 0x00;
  2073  066C  1283               	bcf	3,5	;RP0=0, select bank0
  2074  066D  1303               	bcf	3,6	;RP1=0, select bank0
  2075  066E  0186               	clrf	6	;volatile
  2076  066F                     l1208:
  2077                           
  2078                           ;config.c: 106:     if (ADRES > 127)
  2079  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0671  082E               	movf	_ADRES+1,w
  2082  0672  3A80               	xorlw	128
  2083  0673  00FF               	movwf	btemp+1
  2084  0674  3080               	movlw	128
  2085  0675  027F               	subwf	btemp+1,w
  2086  0676  1D03               	skipz
  2087  0677  2E7A               	goto	u465
  2088  0678  3080               	movlw	128
  2089  0679  022D               	subwf	_ADRES,w
  2090  067A                     u465:
  2091  067A  1C03               	skipc
  2092  067B  2E7D               	goto	u461
  2093  067C  2E7E               	goto	u460
  2094  067D                     u461:
  2095  067D  2E82               	goto	l1212
  2096  067E                     u460:
  2097  067E                     l1210:
  2098                           
  2099                           ;config.c: 107:         PORTB = 0x01;
  2100  067E  3001               	movlw	1
  2101  067F  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0680  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0681  0086               	movwf	6	;volatile
  2104  0682                     l1212:
  2105                           
  2106                           ;config.c: 108:     if (ADRES > 255)
  2107  0682  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0683  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0684  082E               	movf	_ADRES+1,w
  2110  0685  3A80               	xorlw	128
  2111  0686  00FF               	movwf	btemp+1
  2112  0687  3081               	movlw	129
  2113  0688  027F               	subwf	btemp+1,w
  2114  0689  1D03               	skipz
  2115  068A  2E8D               	goto	u475
  2116  068B  3000               	movlw	0
  2117  068C  022D               	subwf	_ADRES,w
  2118  068D                     u475:
  2119  068D  1C03               	skipc
  2120  068E  2E90               	goto	u471
  2121  068F  2E91               	goto	u470
  2122  0690                     u471:
  2123  0690  2E95               	goto	l1216
  2124  0691                     u470:
  2125  0691                     l1214:
  2126                           
  2127                           ;config.c: 109:         PORTB = 0x03;
  2128  0691  3003               	movlw	3
  2129  0692  1283               	bcf	3,5	;RP0=0, select bank0
  2130  0693  1303               	bcf	3,6	;RP1=0, select bank0
  2131  0694  0086               	movwf	6	;volatile
  2132  0695                     l1216:
  2133                           
  2134                           ;config.c: 110:     if (ADRES > 382)
  2135  0695  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0696  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0697  082E               	movf	_ADRES+1,w
  2138  0698  3A80               	xorlw	128
  2139  0699  00FF               	movwf	btemp+1
  2140  069A  3081               	movlw	129
  2141  069B  027F               	subwf	btemp+1,w
  2142  069C  1D03               	skipz
  2143  069D  2EA0               	goto	u485
  2144  069E  307F               	movlw	127
  2145  069F  022D               	subwf	_ADRES,w
  2146  06A0                     u485:
  2147  06A0  1C03               	skipc
  2148  06A1  2EA3               	goto	u481
  2149  06A2  2EA4               	goto	u480
  2150  06A3                     u481:
  2151  06A3  2EA8               	goto	l1220
  2152  06A4                     u480:
  2153  06A4                     l1218:
  2154                           
  2155                           ;config.c: 111:         PORTB = 0x07;
  2156  06A4  3007               	movlw	7
  2157  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2158  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2159  06A7  0086               	movwf	6	;volatile
  2160  06A8                     l1220:
  2161                           
  2162                           ;config.c: 112:     if (ADRES > 511)
  2163  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2164  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2165  06AA  082E               	movf	_ADRES+1,w
  2166  06AB  3A80               	xorlw	128
  2167  06AC  00FF               	movwf	btemp+1
  2168  06AD  3082               	movlw	130
  2169  06AE  027F               	subwf	btemp+1,w
  2170  06AF  1D03               	skipz
  2171  06B0  2EB3               	goto	u495
  2172  06B1  3000               	movlw	0
  2173  06B2  022D               	subwf	_ADRES,w
  2174  06B3                     u495:
  2175  06B3  1C03               	skipc
  2176  06B4  2EB6               	goto	u491
  2177  06B5  2EB7               	goto	u490
  2178  06B6                     u491:
  2179  06B6  2EBB               	goto	l1224
  2180  06B7                     u490:
  2181  06B7                     l1222:
  2182                           
  2183                           ;config.c: 113:         PORTB = 0x0F;
  2184  06B7  300F               	movlw	15
  2185  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  2186  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  2187  06BA  0086               	movwf	6	;volatile
  2188  06BB                     l1224:
  2189                           
  2190                           ;config.c: 114:     if (ADRES > 639)
  2191  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  2192  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  2193  06BD  082E               	movf	_ADRES+1,w
  2194  06BE  3A80               	xorlw	128
  2195  06BF  00FF               	movwf	btemp+1
  2196  06C0  3082               	movlw	130
  2197  06C1  027F               	subwf	btemp+1,w
  2198  06C2  1D03               	skipz
  2199  06C3  2EC6               	goto	u505
  2200  06C4  3080               	movlw	128
  2201  06C5  022D               	subwf	_ADRES,w
  2202  06C6                     u505:
  2203  06C6  1C03               	skipc
  2204  06C7  2EC9               	goto	u501
  2205  06C8  2ECA               	goto	u500
  2206  06C9                     u501:
  2207  06C9  2ECE               	goto	l1228
  2208  06CA                     u500:
  2209  06CA                     l1226:
  2210                           
  2211                           ;config.c: 115:         PORTB = 0x1F;
  2212  06CA  301F               	movlw	31
  2213  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2214  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2215  06CD  0086               	movwf	6	;volatile
  2216  06CE                     l1228:
  2217                           
  2218                           ;config.c: 116:     if (ADRES > 767)
  2219  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2220  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2221  06D0  082E               	movf	_ADRES+1,w
  2222  06D1  3A80               	xorlw	128
  2223  06D2  00FF               	movwf	btemp+1
  2224  06D3  3083               	movlw	131
  2225  06D4  027F               	subwf	btemp+1,w
  2226  06D5  1D03               	skipz
  2227  06D6  2ED9               	goto	u515
  2228  06D7  3000               	movlw	0
  2229  06D8  022D               	subwf	_ADRES,w
  2230  06D9                     u515:
  2231  06D9  1C03               	skipc
  2232  06DA  2EDC               	goto	u511
  2233  06DB  2EDD               	goto	u510
  2234  06DC                     u511:
  2235  06DC  2EE1               	goto	l1232
  2236  06DD                     u510:
  2237  06DD                     l1230:
  2238                           
  2239                           ;config.c: 117:         PORTB = 0x3F;
  2240  06DD  303F               	movlw	63
  2241  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  2242  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  2243  06E0  0086               	movwf	6	;volatile
  2244  06E1                     l1232:
  2245                           
  2246                           ;config.c: 118:     if (ADRES > 894)
  2247  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2248  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2249  06E3  082E               	movf	_ADRES+1,w
  2250  06E4  3A80               	xorlw	128
  2251  06E5  00FF               	movwf	btemp+1
  2252  06E6  3083               	movlw	131
  2253  06E7  027F               	subwf	btemp+1,w
  2254  06E8  1D03               	skipz
  2255  06E9  2EEC               	goto	u525
  2256  06EA  307F               	movlw	127
  2257  06EB  022D               	subwf	_ADRES,w
  2258  06EC                     u525:
  2259  06EC  1C03               	skipc
  2260  06ED  2EEF               	goto	u521
  2261  06EE  2EF0               	goto	u520
  2262  06EF                     u521:
  2263  06EF  2EF4               	goto	l1236
  2264  06F0                     u520:
  2265  06F0                     l1234:
  2266                           
  2267                           ;config.c: 119:         PORTB = 0x7F;
  2268  06F0  307F               	movlw	127
  2269  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2270  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2271  06F3  0086               	movwf	6	;volatile
  2272  06F4                     l1236:
  2273                           
  2274                           ;config.c: 120:     if (ADRES > 1022)
  2275  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2276  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2277  06F6  082E               	movf	_ADRES+1,w
  2278  06F7  3A80               	xorlw	128
  2279  06F8  00FF               	movwf	btemp+1
  2280  06F9  3083               	movlw	131
  2281  06FA  027F               	subwf	btemp+1,w
  2282  06FB  1D03               	skipz
  2283  06FC  2EFF               	goto	u535
  2284  06FD  30FF               	movlw	255
  2285  06FE  022D               	subwf	_ADRES,w
  2286  06FF                     u535:
  2287  06FF  1C03               	skipc
  2288  0700  2F02               	goto	u531
  2289  0701  2F03               	goto	u530
  2290  0702                     u531:
  2291  0702  2F07               	goto	l192
  2292  0703                     u530:
  2293  0703                     l1238:
  2294                           
  2295                           ;config.c: 121:         PORTB = 0xFF;
  2296  0703  30FF               	movlw	255
  2297  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2298  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2299  0706  0086               	movwf	6	;volatile
  2300  0707                     l192:
  2301  0707  0008               	return
  2302  0708                     __end_of_ADCRead:
  2303                           
  2304                           	psect	text12
  2305  03F5                     __ptext12:	
  2306 ;; *************** function _canal0 *****************
  2307 ;; Defined at:
  2308 ;;		line 142 in file "config.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  z               2   10[COMMON] int 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2322 ;;      Params:         2       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0
  2325 ;;      Totals:         2       0       0       0       0
  2326 ;;Total ram usage:        2 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    1
  2329 ;; This function calls:
  2330 ;;		_delay_ms
  2331 ;; This function is called by:
  2332 ;;		_ADCRead
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _canal0
  2338  03F5                     _canal0:
  2339  03F5                     l1150:	
  2340                           ;incstack = 0
  2341                           ; Regs used in _canal0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2342                           
  2343                           
  2344                           ;config.c: 143:     CHS2 = 0;
  2345  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2346  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2347  03F7  121F               	bcf	31,4	;volatile
  2348                           
  2349                           ;config.c: 144:     CHS1 = 0;
  2350  03F8  119F               	bcf	31,3	;volatile
  2351                           
  2352                           ;config.c: 145:     CHS0 = 0;
  2353  03F9  111F               	bcf	31,2	;volatile
  2354                           
  2355                           ;config.c: 147:     ADON = 1;
  2356  03FA  141F               	bsf	31,0	;volatile
  2357  03FB                     l1152:
  2358                           
  2359                           ;config.c: 148:     delay_ms(z);
  2360  03FB  087B               	movf	canal0@z+1,w
  2361  03FC  00F1               	movwf	delay_ms@time+1
  2362  03FD  087A               	movf	canal0@z,w
  2363  03FE  00F0               	movwf	delay_ms@time
  2364  03FF  120A  118A  255D  120A  118A  	fcall	_delay_ms
  2365  0404                     l1154:
  2366                           
  2367                           ;config.c: 149:     GO = 1;
  2368  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0406  149F               	bsf	31,1	;volatile
  2371  0407                     l1156:
  2372                           
  2373                           ;config.c: 152:     if (ADIF == 0)
  2374  0407  1B0C               	btfsc	12,6	;volatile
  2375  0408  2C0A               	goto	u391
  2376  0409  2C0B               	goto	u390
  2377  040A                     u391:
  2378  040A  2C0C               	goto	l203
  2379  040B                     u390:
  2380  040B  2C07               	goto	l1156
  2381  040C                     l203:
  2382                           
  2383                           ;config.c: 155:     ADON = 0;
  2384  040C  101F               	bcf	31,0	;volatile
  2385  040D                     l1160:
  2386                           
  2387                           ;config.c: 157:     ADRES = (ADRESH << 8) | ADRESL;
  2388  040D  081E               	movf	30,w	;volatile
  2389  040E  00AE               	movwf	_ADRES+1
  2390  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0411  081E               	movf	30,w	;volatile
  2393  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0414  00AD               	movwf	_ADRES
  2396  0415                     l1162:
  2397                           
  2398                           ;config.c: 159:     ADIF = 0;
  2399  0415  130C               	bcf	12,6	;volatile
  2400  0416                     l204:
  2401  0416  0008               	return
  2402  0417                     __end_of_canal0:
  2403                           
  2404                           	psect	text13
  2405  055D                     __ptext13:	
  2406 ;; *************** function _delay_ms *****************
  2407 ;; Defined at:
  2408 ;;		line 124 in file "config.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  time            2    0[COMMON] int 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  i               4    6[COMMON] long 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, btemp+1
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         2       0       0       0       0
  2423 ;;      Locals:         4       0       0       0       0
  2424 ;;      Temps:          4       0       0       0       0
  2425 ;;      Totals:        10       0       0       0       0
  2426 ;;Total ram usage:       10 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;;		_canal0
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _delay_ms
  2438  055D                     _delay_ms:
  2439  055D                     l1102:	
  2440                           ;incstack = 0
  2441                           ; Regs used in _delay_ms: [wreg+status,2+status,0+btemp+1]
  2442                           
  2443                           
  2444                           ;config.c: 125:     long i = 0;
  2445  055D  3000               	movlw	0
  2446  055E  00F9               	movwf	delay_ms@i+3
  2447  055F  3000               	movlw	0
  2448  0560  00F8               	movwf	delay_ms@i+2
  2449  0561  3000               	movlw	0
  2450  0562  00F7               	movwf	delay_ms@i+1
  2451  0563  3000               	movlw	0
  2452  0564  00F6               	movwf	delay_ms@i
  2453  0565                     l1104:
  2454                           
  2455                           ;config.c: 127:     TMR0 = 0;
  2456  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0567  0181               	clrf	1	;volatile
  2459  0568                     l1106:
  2460                           
  2461                           ;config.c: 130:     if (i <= time) {
  2462  0568  0870               	movf	delay_ms@time,w
  2463  0569  00F2               	movwf	??_delay_ms
  2464  056A  0871               	movf	delay_ms@time+1,w
  2465  056B  00F3               	movwf	??_delay_ms+1
  2466  056C  3000               	movlw	0
  2467  056D  1BF3               	btfsc	??_delay_ms+1,7
  2468  056E  30FF               	movlw	255
  2469  056F  00F4               	movwf	??_delay_ms+2
  2470  0570  00F5               	movwf	??_delay_ms+3
  2471  0571  0875               	movf	??_delay_ms+3,w
  2472  0572  3A80               	xorlw	128
  2473  0573  00FF               	movwf	btemp+1
  2474  0574  0879               	movf	delay_ms@i+3,w
  2475  0575  3A80               	xorlw	128
  2476  0576  027F               	subwf	btemp+1,w
  2477  0577  1D03               	skipz
  2478  0578  2D83               	goto	u363
  2479  0579  0878               	movf	delay_ms@i+2,w
  2480  057A  0274               	subwf	??_delay_ms+2,w
  2481  057B  1D03               	skipz
  2482  057C  2D83               	goto	u363
  2483  057D  0877               	movf	delay_ms@i+1,w
  2484  057E  0273               	subwf	??_delay_ms+1,w
  2485  057F  1D03               	skipz
  2486  0580  2D83               	goto	u363
  2487  0581  0876               	movf	delay_ms@i,w
  2488  0582  0272               	subwf	??_delay_ms,w
  2489  0583                     u363:
  2490  0583  1C03               	skipc
  2491  0584  2D86               	goto	u361
  2492  0585  2D87               	goto	u360
  2493  0586                     u361:
  2494  0586  2D9B               	goto	l199
  2495  0587                     u360:
  2496  0587                     l1108:
  2497                           
  2498                           ;config.c: 132:         if (i <= 136) {
  2499  0587  1BF9               	btfsc	delay_ms@i+3,7
  2500  0588  2D9A               	goto	u370
  2501  0589  0879               	movf	delay_ms@i+3,w
  2502  058A  1D03               	btfss	3,2
  2503  058B  2D99               	goto	u371
  2504  058C  0878               	movf	delay_ms@i+2,w
  2505  058D  1D03               	btfss	3,2
  2506  058E  2D99               	goto	u371
  2507  058F  0877               	movf	delay_ms@i+1,w
  2508  0590  1D03               	btfss	3,2
  2509  0591  2D99               	goto	u371
  2510  0592  3089               	movlw	137
  2511  0593  0276               	subwf	delay_ms@i,w
  2512  0594  1D03               	skipz
  2513  0595  2D96               	goto	u373
  2514  0596                     u373:
  2515  0596  1803               	btfsc	3,0
  2516  0597  2D99               	goto	u371
  2517  0598  2D9A               	goto	u370
  2518  0599                     u371:
  2519  0599  2D9B               	goto	l199
  2520  059A                     u370:
  2521  059A  2D68               	goto	l1106
  2522  059B                     l199:
  2523  059B  0008               	return
  2524  059C                     __end_of_delay_ms:
  2525                           
  2526                           	psect	text14
  2527  039F                     __ptext14:	
  2528 ;; *************** function _iniciarPullUp *****************
  2529 ;; Defined at:
  2530 ;;		line 81 in file "config.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0
  2547 ;;      Totals:         0       0       0       0       0
  2548 ;;Total ram usage:        0 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_main
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function _iniciarPullUp
  2559  039F                     _iniciarPullUp:
  2560  039F                     l1252:	
  2561                           ;incstack = 0
  2562                           ; Regs used in _iniciarPullUp: [wreg+status,2]
  2563                           
  2564                           
  2565                           ;config.c: 82:     TRISA = 0xff;
  2566  039F  30FF               	movlw	255
  2567  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2568  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2569  03A2  0085               	movwf	5	;volatile
  2570  03A3                     l1254:
  2571                           
  2572                           ;config.c: 83:     PORTA = 0x00;
  2573  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2574  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2575  03A5  0185               	clrf	5	;volatile
  2576  03A6                     l1256:
  2577                           
  2578                           ;config.c: 84:     TRISB = 0xff;
  2579  03A6  30FF               	movlw	255
  2580  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2581  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2582  03A9  0086               	movwf	6	;volatile
  2583                           
  2584                           ;config.c: 85:     PORTB = 0x00;
  2585  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2586  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2587  03AC  0186               	clrf	6	;volatile
  2588                           
  2589                           ;config.c: 86:     TRISD = 0x00;
  2590  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2591  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2592  03AF  0188               	clrf	8	;volatile
  2593                           
  2594                           ;config.c: 87:     PORTD = 0x00;
  2595  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2596  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2597  03B2  0188               	clrf	8	;volatile
  2598  03B3                     l1258:
  2599                           
  2600                           ;config.c: 88:     OSCCON = 0x76;
  2601  03B3  3076               	movlw	118
  2602  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2603  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2604  03B6  008F               	movwf	15	;volatile
  2605  03B7                     l176:
  2606  03B7  0008               	return
  2607  03B8                     __end_of_iniciarPullUp:
  2608                           
  2609                           	psect	text15
  2610  05F4                     __ptext15:	
  2611 ;; *************** function _Lcd_Init *****************
  2612 ;; Defined at:
  2613 ;;		line 93 in file "lcd.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, pclath, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2627 ;;      Params:         0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0
  2629 ;;      Temps:          2       0       0       0       0
  2630 ;;      Totals:         2       0       0       0       0
  2631 ;;Total ram usage:        2 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    2
  2634 ;; This function calls:
  2635 ;;		_Lcd_Cmd
  2636 ;;		_Lcd_Port
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _Lcd_Init
  2644  05F4                     _Lcd_Init:
  2645  05F4                     l1240:	
  2646                           ;incstack = 0
  2647                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2648                           
  2649                           
  2650                           ;lcd.c: 94: void Lcd_Write_String(char *a) {
  2651  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  2652  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  2653  05F6  1108               	bcf	8,2	;volatile
  2654  05F7                     l1242:
  2655                           
  2656                           ;lcd.c: 95:     int i;
  2657  05F7  3000               	movlw	0
  2658  05F8  120A  118A  23D3  120A  118A  	fcall	_Lcd_Port
  2659  05FD                     l1244:
  2660                           
  2661                           ;lcd.c: 96:     for (i = 0; a[i] != '\0'; i++)
  2662  05FD  3034               	movlw	52
  2663  05FE  00F5               	movwf	??_Lcd_Init+1
  2664  05FF  30F1               	movlw	241
  2665  0600  00F4               	movwf	??_Lcd_Init
  2666  0601                     u707:
  2667  0601  0BF4               	decfsz	??_Lcd_Init,f
  2668  0602  2E01               	goto	u707
  2669  0603  0BF5               	decfsz	??_Lcd_Init+1,f
  2670  0604  2E01               	goto	u707
  2671  0605  2E06               	nop2
  2672  0606                     l1246:
  2673                           
  2674                           ;lcd.c: 97:         Lcd_Write_Char(a[i]);
  2675  0606  3003               	movlw	3
  2676  0607  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2677                           
  2678                           ;lcd.c: 98: }
  2679  060C  300D               	movlw	13
  2680  060D  00F5               	movwf	??_Lcd_Init+1
  2681  060E  30FB               	movlw	251
  2682  060F  00F4               	movwf	??_Lcd_Init
  2683  0610                     u717:
  2684  0610  0BF4               	decfsz	??_Lcd_Init,f
  2685  0611  2E10               	goto	u717
  2686  0612  0BF5               	decfsz	??_Lcd_Init+1,f
  2687  0613  2E10               	goto	u717
  2688  0614  2E15               	nop2
  2689  0615                     l1248:
  2690  0615  3003               	movlw	3
  2691  0616  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2692  061B                     l1250:
  2693  061B  301D               	movlw	29
  2694  061C  00F5               	movwf	??_Lcd_Init+1
  2695  061D  3091               	movlw	145
  2696  061E  00F4               	movwf	??_Lcd_Init
  2697  061F                     u727:
  2698  061F  0BF4               	decfsz	??_Lcd_Init,f
  2699  0620  2E1F               	goto	u727
  2700  0621  0BF5               	decfsz	??_Lcd_Init+1,f
  2701  0622  2E1F               	goto	u727
  2702  0623  3003               	movlw	3
  2703  0624  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2704  0629  3002               	movlw	2
  2705  062A  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2706  062F  3002               	movlw	2
  2707  0630  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2708  0635  3008               	movlw	8
  2709  0636  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2710  063B  3000               	movlw	0
  2711  063C  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2712  0641  300C               	movlw	12
  2713  0642  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2714  0647  3000               	movlw	0
  2715  0648  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2716  064D  3006               	movlw	6
  2717  064E  120A  118A  23B8  120A  118A  	fcall	_Lcd_Cmd
  2718  0653                     l42:
  2719  0653  0008               	return
  2720  0654                     __end_of_Lcd_Init:
  2721                           
  2722                           	psect	text16
  2723  03B8                     __ptext16:	
  2724 ;; *************** function _Lcd_Cmd *****************
  2725 ;; Defined at:
  2726 ;;		line 58 in file "lcd.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  a               1    wreg     unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  a               1    3[COMMON] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0
  2742 ;;      Temps:          2       0       0       0       0
  2743 ;;      Totals:         3       0       0       0       0
  2744 ;;Total ram usage:        3 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    1
  2747 ;; This function calls:
  2748 ;;		_Lcd_Port
  2749 ;; This function is called by:
  2750 ;;		_Lcd_Clear
  2751 ;;		_Lcd_Set_Cursor
  2752 ;;		_Lcd_Init
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _Lcd_Cmd
  2758  03B8                     _Lcd_Cmd:
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2762                           ;Lcd_Cmd@a stored from wreg
  2763  03B8  00F3               	movwf	Lcd_Cmd@a
  2764  03B9                     l1116:
  2765                           
  2766                           ;lcd.c: 59:     RD2 = 0;
  2767  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2768  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2769  03BB  1108               	bcf	8,2	;volatile
  2770                           
  2771                           ;lcd.c: 60:     Lcd_Port(0x00);
  2772  03BC  1088               	bcf	8,1	;volatile
  2773  03BD                     l1118:
  2774                           
  2775                           ;lcd.c: 61:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2776  03BD  0873               	movf	Lcd_Cmd@a,w
  2777  03BE  120A  118A  23D3  120A  118A  	fcall	_Lcd_Port
  2778  03C3                     l1120:
  2779                           
  2780                           ;lcd.c: 62:     Lcd_Cmd(0x03);
  2781  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2782  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2783  03C5  1408               	bsf	8,0	;volatile
  2784  03C6                     l1122:
  2785                           
  2786                           ;lcd.c: 63:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2787  03C6  300B               	movlw	11
  2788  03C7  00F2               	movwf	??_Lcd_Cmd+1
  2789  03C8  3062               	movlw	98
  2790  03C9  00F1               	movwf	??_Lcd_Cmd
  2791  03CA                     u737:
  2792  03CA  0BF1               	decfsz	??_Lcd_Cmd,f
  2793  03CB  2BCA               	goto	u737
  2794  03CC  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2795  03CD  2BCA               	goto	u737
  2796  03CE  0000               	nop
  2797  03CF                     l1124:
  2798                           
  2799                           ;lcd.c: 64:     Lcd_Cmd(0x03);
  2800  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2801  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2802  03D1  1008               	bcf	8,0	;volatile
  2803  03D2                     l30:
  2804  03D2  0008               	return
  2805  03D3                     __end_of_Lcd_Cmd:
  2806                           
  2807                           	psect	text17
  2808  03D3                     __ptext17:	
  2809 ;; *************** function _Lcd_Port *****************
  2810 ;; Defined at:
  2811 ;;		line 36 in file "lcd.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  a               1    wreg     unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  a               1    0[COMMON] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         1       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0
  2828 ;;      Totals:         1       0       0       0       0
  2829 ;;Total ram usage:        1 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_Lcd_Cmd
  2835 ;;		_Lcd_Init
  2836 ;;		_Lcd_Write_Char
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           
  2841                           ;psect for function _Lcd_Port
  2842  03D3                     _Lcd_Port:
  2843                           
  2844                           ;incstack = 0
  2845                           ; Regs used in _Lcd_Port: [wreg]
  2846                           ;Lcd_Port@a stored from wreg
  2847  03D3  00F0               	movwf	Lcd_Port@a
  2848  03D4                     l1092:
  2849                           
  2850                           ;lcd.c: 37: }
  2851  03D4  1C70               	btfss	Lcd_Port@a,0
  2852  03D5  2BD7               	goto	u321
  2853  03D6  2BD8               	goto	u320
  2854  03D7                     u321:
  2855  03D7  2BDC               	goto	l19
  2856  03D8                     u320:
  2857  03D8                     l1094:
  2858                           
  2859                           ;lcd.c: 38: 
  2860  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2861  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2862  03DA  1608               	bsf	8,4	;volatile
  2863  03DB  2BDF               	goto	l20
  2864  03DC                     l19:	
  2865                           ;lcd.c: 39: void Lcd_Set_Cursor(char a, char b) {
  2866                           
  2867                           
  2868                           ;lcd.c: 40:     RD2 = 0;
  2869  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2870  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2871  03DE  1208               	bcf	8,4	;volatile
  2872  03DF                     l20:
  2873                           
  2874                           ;lcd.c: 42:     if (a == 1) {
  2875  03DF  1CF0               	btfss	Lcd_Port@a,1
  2876  03E0  2BE2               	goto	u331
  2877  03E1  2BE3               	goto	u330
  2878  03E2                     u331:
  2879  03E2  2BE5               	goto	l21
  2880  03E3                     u330:
  2881  03E3                     l1096:
  2882                           
  2883                           ;lcd.c: 43:         temp = 0x80 + b - 1;
  2884  03E3  1688               	bsf	8,5	;volatile
  2885  03E4  2BE6               	goto	l22
  2886  03E5                     l21:	
  2887                           ;lcd.c: 44:         z = temp >> 4;
  2888                           
  2889                           
  2890                           ;lcd.c: 45:         y = temp & 0x0F;
  2891  03E5  1288               	bcf	8,5	;volatile
  2892  03E6                     l22:
  2893                           
  2894                           ;lcd.c: 47:         Lcd_Cmd(y);
  2895  03E6  1D70               	btfss	Lcd_Port@a,2
  2896  03E7  2BE9               	goto	u341
  2897  03E8  2BEA               	goto	u340
  2898  03E9                     u341:
  2899  03E9  2BEC               	goto	l23
  2900  03EA                     u340:
  2901  03EA                     l1098:
  2902                           
  2903                           ;lcd.c: 48:     } else if (a == 2) {
  2904  03EA  1708               	bsf	8,6	;volatile
  2905  03EB  2BED               	goto	l24
  2906  03EC                     l23:	
  2907                           ;lcd.c: 49:         temp = 0xC0 + b - 1;
  2908                           
  2909                           
  2910                           ;lcd.c: 50:         z = temp >> 4;
  2911  03EC  1308               	bcf	8,6	;volatile
  2912  03ED                     l24:
  2913                           
  2914                           ;lcd.c: 52:         Lcd_Cmd(z);
  2915  03ED  1DF0               	btfss	Lcd_Port@a,3
  2916  03EE  2BF0               	goto	u351
  2917  03EF  2BF1               	goto	u350
  2918  03F0                     u351:
  2919  03F0  2BF3               	goto	l25
  2920  03F1                     u350:
  2921  03F1                     l1100:
  2922                           
  2923                           ;lcd.c: 53:         Lcd_Cmd(y);
  2924  03F1  1788               	bsf	8,7	;volatile
  2925  03F2  2BF4               	goto	l27
  2926  03F3                     l25:	
  2927                           ;lcd.c: 54:     }
  2928                           
  2929                           
  2930                           ;lcd.c: 55:     RD2 = 0;
  2931  03F3  1388               	bcf	8,7	;volatile
  2932  03F4                     l27:
  2933  03F4  0008               	return
  2934  03F5                     __end_of_Lcd_Port:
  2935                           
  2936                           	psect	text18
  2937  0389                     __ptext18:	
  2938 ;; *************** function _ADCInit *****************
  2939 ;; Defined at:
  2940 ;;		line 91 in file "config.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2954 ;;      Params:         0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0
  2957 ;;      Totals:         0       0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _ADCInit
  2969  0389                     _ADCInit:
  2970  0389                     l1260:	
  2971                           ;incstack = 0
  2972                           ; Regs used in _ADCInit: [wreg+status,2]
  2973                           
  2974                           
  2975                           ;config.c: 92:     ADCON0 = 0x80;
  2976  0389  3080               	movlw	128
  2977  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2978  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2979  038C  009F               	movwf	31	;volatile
  2980                           
  2981                           ;config.c: 93:     ADCON1 = 0x8E;
  2982  038D  308E               	movlw	142
  2983  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2984  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0390  009F               	movwf	31	;volatile
  2986  0391                     l1262:
  2987                           
  2988                           ;config.c: 94:     ADIF = 0;
  2989  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0393  130C               	bcf	12,6	;volatile
  2992                           
  2993                           ;config.c: 95:     ADRESH = 1;
  2994  0394  3001               	movlw	1
  2995  0395  009E               	movwf	30	;volatile
  2996  0396                     l1264:
  2997                           
  2998                           ;config.c: 96:     ADRESL = 0;
  2999  0396  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0397  1303               	bcf	3,6	;RP1=0, select bank1
  3001  0398  019E               	clrf	30	;volatile
  3002  0399                     l1266:
  3003                           
  3004                           ;config.c: 97:     OPTION_REG = 0X51;
  3005  0399  3051               	movlw	81
  3006  039A  0081               	movwf	1	;volatile
  3007                           
  3008                           ;config.c: 98:     TMR0 = 0;
  3009  039B  1283               	bcf	3,5	;RP0=0, select bank0
  3010  039C  1303               	bcf	3,6	;RP1=0, select bank0
  3011  039D  0181               	clrf	1	;volatile
  3012  039E                     l179:
  3013  039E  0008               	return
  3014  039F                     __end_of_ADCInit:
  3015  007E                     btemp	set	126	;btemp
  3016  007E                     wtemp0	set	126
  3017                           
  3018                           	psect	config
  3019                           
  3020                           ;Config register CONFIG1 @ 0x2007
  3021                           ;	Oscillator Selection bits
  3022                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3023                           ;	Watchdog Timer Enable bit
  3024                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3025                           ;	Power-up Timer Enable bit
  3026                           ;	PWRTE = OFF, PWRT disabled
  3027                           ;	RE3/MCLR pin function select bit
  3028                           ;	MCLRE = 0x1, unprogrammed default
  3029                           ;	Code Protection bit
  3030                           ;	CP = OFF, Program memory code protection is disabled
  3031                           ;	Data Code Protection bit
  3032                           ;	CPD = OFF, Data memory code protection is disabled
  3033                           ;	Brown Out Reset Selection bits
  3034                           ;	BOREN = ON, BOR enabled
  3035                           ;	Internal External Switchover bit
  3036                           ;	IESO = 0x1, unprogrammed default
  3037                           ;	Fail-Safe Clock Monitor Enabled bit
  3038                           ;	FCMEN = 0x1, unprogrammed default
  3039                           ;	Low Voltage Programming Enable bit
  3040                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3041                           ;	In-Circuit Debugger Mode bit
  3042                           ;	DEBUG = 0x1, unprogrammed default
  3043  2007                     	org	8199
  3044  2007  2FF2               	dw	12274
  3045                           
  3046                           ;Config register CONFIG2 @ 0x2008
  3047                           ;	Brown-out Reset Selection bit
  3048                           ;	BOR4V = 0x1, unprogrammed default
  3049                           ;	Flash Program Memory Self Write Enable bits
  3050                           ;	WRT = OFF, Write protection off
  3051  2008                     	org	8200
  3052  2008  3FFF               	dw	16383

Data Sizes:
    Strings     113
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[8]), STR_10(CODE[16]), STR_9(CODE[15]), STR_8(CODE[16]), 
		 -> STR_7(CODE[15]), STR_6(CODE[16]), STR_5(CODE[15]), STR_4(CODE[16]), 
		 -> STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_medirVoltajeDC
    _main->_mostrarError
    _main->_printMenu
    _main->_seleccionarMultimetroAC
    _main->_seleccionarMultimetroDC
    _main->_seleccionarTemperatura
    _seleccionarTemperatura->_Lcd_Set_Cursor
    _seleccionarMultimetroDC->_Lcd_Set_Cursor
    _seleccionarMultimetroAC->_Lcd_Set_Cursor
    _printMenu->_Lcd_Set_Cursor
    _mostrarError->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _ADCRead->_canal0
    _canal0->_delay_ms
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _medirVoltajeDC->_ADCRead

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   13531
                                              3 BANK0     10    10      0
                            _ADCInit
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _delay_ms
                      _iniciarPullUp
                     _medirVoltajeDC
                       _mostrarError
                          _printMenu
            _seleccionarMultimetroAC
            _seleccionarMultimetroDC
             _seleccionarTemperatura
 ---------------------------------------------------------------------------------
 (1) _seleccionarTemperatura                               3     3      0    1957
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _seleccionarMultimetroDC                              3     3      0    1957
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _seleccionarMultimetroAC                              3     3      0    1957
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _printMenu                                            3     3      0    1957
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _mostrarError                                         3     3      0    1957
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     631
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1216
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _medirVoltajeDC                                       2     2      0     775
                                             12 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3     774
                                              0 BANK0      3     0      3
                             _canal0
 ---------------------------------------------------------------------------------
 (3) _canal0                                               2     0      2     774
                                             10 COMMON     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                            10     8      2     676
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _iniciarPullUp                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _delay_ms
   _iniciarPullUp
   _medirVoltajeDC
     _ADCRead
       _canal0
         _delay_ms
   _mostrarError
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _printMenu
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _seleccionarMultimetroAC
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _seleccionarMultimetroDC
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _seleccionarTemperatura
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Dec 03 13:27:11 2020

                               pc 0002                                l20 03DF                                l21 03E5  
                              l22 03E6                                l30 03D2                                l23 03EC  
                              l24 03ED                                l25 03F3                                l33 0388  
                              l42 0653                                l27 03F4                                l19 03DC  
                              l51 043B                                l45 055C                                l39 05F3  
                              l91 0762                                l95 07A1                                _GO 00F9  
                              l99 07DB                                fsr 0004                               l203 040C  
                             l204 0416                               l161 04F3                               l170 0469  
                             l164 04C5                               l173 0375                               l182 0654  
                             l158 0497                               l167 0521                               l176 03B7  
                             l192 0707                               l179 039E                               l199 059B  
                             _RB0 0030                               _RB1 0031                               _RB2 0032  
                             _RD0 0040                               _RD1 0041                               _RD2 0042  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u320 03D8                               u400 05A5  
                             u321 03D7                               u401 05A4                               u330 03E3  
                             u331 03E2                               u340 03EA                               u500 06CA  
                             u420 05CE                               u341 03E9                               u501 06C9  
                             u421 05CD                               u350 03F1                               u510 06DD  
                             u351 03F0                               u511 06DC                               u415 05AD  
                             u360 0587                               u520 06F0                               u440 043B  
                             u600 07BB                               u361 0586                               u521 06EF  
                             u505 06C6                               u441 043A                               u601 07BA  
                             u370 059A                               u530 0703                               u450 066C  
                             u610 07DB                               u371 0599                               u363 0583  
                             u531 0702                               u515 06D9                               u451 066B  
                             u435 05D6                               u611 07DA                               u460 067E  
                             u620 07E1                               u540 0742                               u373 0596  
                             u525 06EC                               u461 067D                               u621 07E0  
                             u541 0741                               u390 040B                               u470 0691  
                             u550 0762                               u391 040A                               u535 06FF  
                             u471 0690                               u455 0668                               u615 07D7  
                             u551 0761                               u480 06A4                               u560 0768  
                             u481 06A3                               u465 067A                               u385 0534  
                             u561 0767                               u490 06B7                               u570 0781  
                             u707 0601                               u491 06B6                               u475 068D  
                             u571 0780                               u555 075E                               u580 07A1  
                             u717 0610                               u485 06A0                               u637 051B  
                             u581 07A0                               u590 07A7                               u727 061F  
                             u495 06B3                               u647 04ED                               u591 07A6  
                             u737 03CA                               u657 04BF                               u585 079D  
                             u667 0491                               u677 0463                               u687 0544  
                             u697 0555                               fsr0 0004                   __end_of_ADCInit 039F  
                 __end_of_ADCRead 0708                              l1100 03F1                              l1102 055D  
                            l1120 03C3                              l1104 0565                              l1200 042E  
                            l1122 03C6                              l1106 0568                              l1210 067E  
                            l1202 0654                              l1130 0530                              l1124 03CF  
                            l1116 03B9                              l1108 0587                              l1220 06A8  
                            l1212 0682                              l1204 065D                              l1140 054A  
                            l1132 0531                              l1300 0515                              l1118 03BD  
                            l1150 03F5                              l1230 06DD                              l1222 06B7  
                            l1214 0691                              l1206 066C                              l1142 0550  
                            l1134 053F                              l1126 0523                              l1302 043C  
                            l1310 0708                              l1240 05F4                              l1160 040D  
                            l1152 03FB                              l1232 06E1                              l1224 06BB  
                            l1216 0695                              l1208 066F                              l1144 0553  
                            l1136 0542                              l1128 0526                              l1304 0449  
                            l1320 0720                              l1312 070C                              l1250 061B  
                            l1242 05F7                              l1162 0415                              l1154 0404  
                            l1234 06F0                              l1226 06CA                              l1218 06A4  
                            l1170 059D                              l1146 0558                              l1138 0547  
                            l1306 044F                              l1330 0742                              l1322 0728  
                            l1314 0711                              l1260 0389                              l1092 03D4  
                            l1244 05FD                              l1252 039F                              l1156 0407  
                            l1236 06F4                              l1228 06CE                              l1164 0376  
                            l1180 05C1                              l1172 05A0                              l1148 055B  
                            l1308 045D                              l1340 0755                              l1324 072E  
                            l1316 0716                              l1262 0391                              l1094 03D8  
                            l1246 0606                              l1254 03A3                              l1238 0703  
                            l1166 0379                              l1190 05EA                              l1174 05A5  
                            l1182 05C8                              l1270 0477                              l1350 0781  
                            l1342 0768                              l1326 0737                              l1318 071B  
                            l1264 0396                              l1096 03E3                              l1248 0615  
                            l1256 03A6                              l1168 0385                              l1184 05CE  
                            l1192 05F0                              l1176 05B6                              l1272 047D  
                            l1280 04D9                              l1360 0794                              l1344 076D  
                            l1336 0744                              l1328 073C                              l1266 0399  
                            l1098 03EA                              l1258 03B3                              l1186 05DF  
                            l1178 05BB                              l1194 0418                              l1274 048B  
                            l1290 04AB                              l1282 04E7                              l1362 07A7  
                            l1346 0772                              l1338 074D                              l1284 036F  
                            l1188 05E4                              l1196 041B                              l1268 046A  
                            l1292 04B9                              l1276 04C6                              l1380 07E1  
                            l1364 07AC                              l1356 0783                              l1348 077B  
                            l1198 0428                              l1286 0498                              l1278 04D3  
                            l1294 04F4                              l1382 07E6                              l1374 07BD  
                            l1358 078C                              l1366 07B5                              l1288 04A5  
                            l1296 0501                              l1376 07C6                              l1368 07BB  
                            l1384 07EF                              l1298 0507                              l1378 07CE  
                            _ADIF 0066                              _ADON 00F8                              _CHS0 00FA  
                            _CHS1 00FB                              _CHS2 00FC                              STR_1 0067  
                            STR_2 0058                              STR_3 0009                              STR_4 001A  
                            STR_5 0049                              STR_6 001A                              STR_7 003A  
                            STR_8 001A                              STR_9 003A                              _TMR0 0001  
               ?_Lcd_Write_String 0070                              _main 0708          ??_seleccionarTemperatura 007B  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 03D3           __size_of_medirVoltajeDC 0007                             ?_main 0070  
          __size_of_iniciarPullUp 0019                             _ADRES 002D                             STR_10 002A  
                           STR_11 0072                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008           __size_of_Lcd_Set_Cursor 0058                             _TRISA 0085  
                           _TRISB 0086                             _TRISD 0088                             main@a 0027  
                           main@b 0029                             main@c 002B                             pclath 000A  
                           status 0003                             wtemp0 007E                  __end_of_Lcd_Init 0654  
                __end_of_Lcd_Port 03F5          ?_seleccionarMultimetroAC 0070          ?_seleccionarMultimetroDC 0070  
                 __initialization 07F8                      __end_of_main 07F8                         ??_ADCInit 0070  
                       ??_ADCRead 007C                            ??_main 007E                __size_of_Lcd_Clear 0013  
                          _ADCON0 001F                            _ADCON1 009F                            _ADRESH 001E  
                          _ADRESL 009E                            _OSCCON 008F                         ??_Lcd_Cmd 0071  
                   _iniciarPullUp 039F           __size_of_Lcd_Write_Char 003B   __size_of_seleccionarTemperatura 002E  
                __end_of_delay_ms 059C                            _canal0 03F5                   Lcd_Set_Cursor@a 0077  
                 Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0079                   Lcd_Set_Cursor@z 0078  
                  ?_iniciarPullUp 0070           __end_of__initialization 07FC                 __end_of_Lcd_Clear 0389  
                  __pcstackCOMMON 0070                    _medirVoltajeDC 036F            _seleccionarTemperatura 04F4  
                  _Lcd_Set_Cursor 059C                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                      __pbssBANK0 002D                        __pmaintext 0708                           ?_canal0 007A  
          __end_of_medirVoltajeDC 0376                           _ADCInit 0389                           _ADCRead 0654  
       __size_of_Lcd_Write_String 0025            __end_of_Lcd_Set_Cursor 05F4                __size_of_printMenu 002E  
                       ?_delay_ms 0070                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                 ??_iniciarPullUp 0070                        __stringtab 0003                    _Lcd_Write_Char 0522  
                         _Lcd_Cmd 03B8                   __size_of_canal0 0022                   ?_medirVoltajeDC 0070  
                 ?_Lcd_Set_Cursor 0074                           __ptext1 04F4                           __ptext2 04C6  
                         __ptext3 0498                           __ptext4 046A                           __ptext5 043C  
                         __ptext6 0417                           __ptext7 0522                           __ptext8 059C  
                         __ptext9 0376                           canal0@z 007A  __size_of_seleccionarMultimetroAC 002E  
__size_of_seleccionarMultimetroDC 002E                    ADCRead@channel 0070                        ??_delay_ms 0072  
          __end_of_Lcd_Write_Char 055D              end_of_initialization 07FC                     ?_mostrarError 0070  
               __end_of_printMenu 0498                         Lcd_Port@a 0070                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075                    ??_mostrarError 007B  
                       _Lcd_Clear 0376           ?_seleccionarTemperatura 0070                    __end_of_canal0 0417  
                _Lcd_Write_String 0417               start_initialization 07F8                 __size_of_Lcd_Init 0060  
               __size_of_Lcd_Port 0022                        ?_Lcd_Clear 0070    __end_of_seleccionarTemperatura 0522  
                        ??_canal0 007C                   Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073  
                        ?_ADCInit 0070                          ?_ADCRead 0020           _seleccionarMultimetroAC 0498  
         _seleccionarMultimetroDC 04C6                         ___latbits 0002                     __pcstackBANK0 0020  
               __size_of_delay_ms 003F                          ?_Lcd_Cmd 0070                  ??_medirVoltajeDC 007C  
                ??_Lcd_Set_Cursor 0075              __end_of_mostrarError 046A                         __pstrings 0003  
           __end_of_iniciarPullUp 03B8                         delay_ms@i 0076                          Lcd_Cmd@a 0073  
                     ??_Lcd_Clear 0074                         _printMenu 046A         ??_seleccionarMultimetroAC 007B  
       ??_seleccionarMultimetroDC 007B                  __size_of_ADCInit 0016                  __size_of_ADCRead 00B4  
                     __stringbase 0008                  ??_Lcd_Write_Char 0071                          _Lcd_Init 05F4  
                        _Lcd_Port 03D3                      delay_ms@time 0070          __end_of_Lcd_Write_String 043C  
                __size_of_Lcd_Cmd 001B                        ?_printMenu 0070                __end_of__stringtab 0009  
                        _delay_ms 055D                          __ptext10 036F                          __ptext11 0654  
                        __ptext12 03F5                          __ptext13 055D                          __ptext14 039F  
                        __ptext15 05F4                          __ptext16 03B8                          __ptext17 03D3  
                        __ptext18 0389   __end_of_seleccionarMultimetroAC 04C6   __end_of_seleccionarMultimetroDC 04F4  
                   __size_of_main 00F0             __size_of_mostrarError 002E                          main@flag 0025  
              Lcd_Write_Char@temp 0072                      _mostrarError 043C                         stringcode 0003  
                     ??_printMenu 007B                Lcd_Set_Cursor@temp 007A                        _OPTION_REG 0081  
                        stringdir 0003                          stringtab 0003  
